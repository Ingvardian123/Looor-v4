package com.uraniumcraft.centrifuge;

import com.uraniumcraft.UraniumPlugin;
import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.entity.Player;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

public class CentrifugeManager {
    private final UraniumPlugin plugin;
    private final Map<Location, Centrifuge> centrifuges;
    
    public CentrifugeManager(UraniumPlugin plugin) {
        this.plugin = plugin;
        this.centrifuges = new HashMap<>();
    }
    
    public boolean createCentrifuge(Location location, Player player) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ —Ü–µ–Ω—Ç—Ä–µ —Å—Ç–æ–∏—Ç –¥–∏—Å–ø–µ–Ω—Å–µ—Ä
        if (location.getBlock().getType() != Material.DISPENSER) {
            player.sendMessage(ChatColor.RED + "–¶–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ –¥–∏—Å–ø–µ–Ω—Å–µ—Ä–µ!");
            return false;
        }
        
        if (centrifuges.containsKey(location)) {
            player.sendMessage(ChatColor.RED + "–ó–¥–µ—Å—å —É–∂–µ –µ—Å—Ç—å —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞!");
            return false;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
        if (!player.hasPermission("uraniumcraft.centrifuge.create") && !player.hasPermission("uraniumcraft.admin")) {
            player.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏!");
            return false;
        }
        
        try {
            Centrifuge centrifuge = new Centrifuge(player.getUniqueId(), location, plugin);
            if (centrifuge.isValidStructure()) {
                centrifuges.put(location, centrifuge);
                player.sendMessage(ChatColor.GREEN + "‚úÖ –¶–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!");
                player.sendMessage(ChatColor.YELLOW + "üí° –ü—Ä–∏–Ω–µ—Å–∏—Ç–µ —Ä—É–¥—ã –∏ –∫–ª–∏–∫–Ω–∏—Ç–µ –ø–æ —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏!");
                return true;
            } else {
                player.sendMessage(ChatColor.RED + "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞!");
                return false;
            }
        } catch (Exception e) {
            player.sendMessage(ChatColor.RED + "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏: " + e.getMessage());
            plugin.getLogger().warning("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏: " + e.getMessage());
            return false;
        }
    }
    
    public Centrifuge getCentrifuge(Location location) {
        return centrifuges.get(location);
    }
    
    public boolean startCentrifuge(Location location, Player player) {
        Centrifuge centrifuge = centrifuges.get(location);
        if (centrifuge == null) {
            player.sendMessage(ChatColor.RED + "–ó–¥–µ—Å—å –Ω–µ—Ç —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏!");
            return false;
        }
        
        if (!centrifuge.getOwner().equals(player.getUniqueId()) && !player.hasPermission("uraniumcraft.admin")) {
            player.sendMessage(ChatColor.RED + "–≠—Ç–æ –Ω–µ –≤–∞—à–∞ —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞!");
            return false;
        }
        
        return centrifuge.startCentrifuge(player);
    }
    
    public void showCentrifugeInfo(Location location, Player player) {
        Centrifuge centrifuge = centrifuges.get(location);
        if (centrifuge == null) {
            player.sendMessage(ChatColor.RED + "–ó–¥–µ—Å—å –Ω–µ—Ç —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏!");
            return;
        }
        
        player.sendMessage(ChatColor.GOLD + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        player.sendMessage(ChatColor.AQUA + "üîÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–µ:");
        
        if (centrifuge.isProcessing()) {
            player.sendMessage(ChatColor.GREEN + "–°—Ç–∞—Ç—É—Å: " + ChatColor.YELLOW + "–†–∞–±–æ—Ç–∞–µ—Ç");
            player.sendMessage(ChatColor.WHITE + "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + ChatColor.GREEN + 
                String.format("%.1f%%", centrifuge.getProgress()));
            player.sendMessage(ChatColor.WHITE + "–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: " + ChatColor.YELLOW + 
                centrifuge.getRemainingTimeString());
            
            if (!centrifuge.getInputMaterials().isEmpty()) {
                player.sendMessage(ChatColor.WHITE + "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:");
                for (Map.Entry<Material, Integer> entry : centrifuge.getInputMaterials().entrySet()) {
                    player.sendMessage(ChatColor.GRAY + "  ‚Ä¢ " + entry.getKey().name() + " x" + entry.getValue());
                }
            }
        } else {
            player.sendMessage(ChatColor.GREEN + "–°—Ç–∞—Ç—É—Å: " + ChatColor.GRAY + "–û–∂–∏–¥–∞–µ—Ç");
            player.sendMessage(ChatColor.WHITE + "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: " + ChatColor.YELLOW + centrifuge.getProcessCount());
        }
        
        player.sendMessage(ChatColor.GOLD + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
    }
    
    public void removeCentrifuge(Location location) {
        Centrifuge centrifuge = centrifuges.get(location);
        if (centrifuge != null) {
            centrifuge.stopCentrifuge();
            centrifuges.remove(location);
        }
    }
    
    public int getTotalCentrifuges() {
        return centrifuges.size();
    }
    
    public int getActiveCentrifuges() {
        return (int) centrifuges.values().stream()
            .filter(Centrifuge::isProcessing)
            .count();
    }
    
    public void shutdown() {
        for (Centrifuge centrifuge : centrifuges.values()) {
            centrifuge.stopCentrifuge();
        }
        centrifuges.clear();
    }
}
