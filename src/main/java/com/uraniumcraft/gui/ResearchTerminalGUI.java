package com.uraniumcraft.gui;

import com.uraniumcraft.items.AdvancedItems;
import com.uraniumcraft.items.AdvancedResearchItems;
import com.uraniumcraft.items.UraniumItems;
import com.uraniumcraft.laboratory.EnhancedLaboratory;
import com.uraniumcraft.laboratory.ResearchProject;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.List;
import java.util.ArrayList;

public class ResearchTerminalGUI {
    
    private static final Map<String, ResearchProject> RESEARCH_DATABASE = new HashMap<>();
    
    static {
        initializeResearchDatabase();
    }
    
    public static void openMainTerminal(Player player, EnhancedLaboratory laboratory) {
        Inventory gui = Bukkit.createInventory(null, 54, 
            ChatColor.DARK_BLUE + "üî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ—Ä–º–∏–Ω–∞–ª");
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
        ItemStack header = new ItemStack(Material.BEACON);
        ItemMeta headerMeta = header.getItemMeta();
        headerMeta.setDisplayName(ChatColor.AQUA + "‚ö° –ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ò–ô –¢–ï–†–ú–ò–ù–ê–õ ‚ö°");
        headerMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º–∏",
            ChatColor.GRAY + "–í–µ—Ä—Å–∏—è: 3.0.1 | –°—Ç–∞—Ç—É—Å: " + ChatColor.GREEN + "–û–ù–õ–ê–ô–ù",
            "",
            ChatColor.YELLOW + "–ó–∞–≤–µ—Ä—à–µ–Ω–æ: " + ChatColor.GREEN + laboratory.getCompletedResearch().size() + ChatColor.GRAY + " –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π",
            ChatColor.YELLOW + "–ê–∫—Ç–∏–≤–Ω–æ: " + ChatColor.GOLD + laboratory.getActiveResearch().size() + ChatColor.GRAY + " –ø—Ä–æ–µ–∫—Ç–æ–≤",
            ChatColor.YELLOW + "–≠–Ω–µ—Ä–≥–∏—è: " + getEnergyBar(laboratory) + ChatColor.GRAY + " (" + laboratory.getCurrentEnergy() + "/" + laboratory.getMaxEnergy() + ")"
        ));
        header.setItemMeta(headerMeta);
        gui.setItem(4, header);
        
        // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        setupNavigationButtons(gui, laboratory);
        
        // –ê–∫—Ç–∏–≤–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        setupActiveResearchDisplay(gui, laboratory);
        
        // –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        setupQuickAccessCategories(gui, laboratory);
        
        // –°—Ç–∞—Ç—É—Å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
        setupLaboratoryStatus(gui, laboratory);
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã
        fillTerminalBackground(gui);
        
        player.openInventory(gui);
        player.playSound(player.getLocation(), Sound.BLOCK_BEACON_ACTIVATE, 0.8f, 1.5f);
    }
    
    public static void openResearchCategory(Player player, EnhancedLaboratory laboratory, String category) {
        Inventory gui = Bukkit.createInventory(null, 54, 
            ChatColor.DARK_PURPLE + "üìÅ " + category);
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        ItemStack categoryHeader = getCategoryIcon(category);
        ItemMeta categoryMeta = categoryHeader.getItemMeta();
        categoryMeta.setDisplayName(ChatColor.GOLD + "üìÅ " + category.toUpperCase());
        categoryMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
            ChatColor.GRAY + "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
            "",
            ChatColor.YELLOW + "üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü—Ä–∏–Ω–µ—Å–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
            ChatColor.YELLOW + "   –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –∏—Ö –≤ —Å–ª–æ—Ç—ã —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
        ));
        categoryHeader.setItemMeta(categoryMeta);
        gui.setItem(4, categoryHeader);
        
        // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        ItemStack back = new ItemStack(Material.ARROW);
        ItemMeta backMeta = back.getItemMeta();
        backMeta.setDisplayName(ChatColor.YELLOW + "‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é");
        backMeta.setLore(Arrays.asList(ChatColor.GRAY + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞"));
        back.setItemMeta(backMeta);
        gui.setItem(45, back);
        
        // –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        setupCategoryResearch(gui, laboratory, category);
        
        fillTerminalBackground(gui);
        player.openInventory(gui);
        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.6f, 1.2f);
    }
    
    public static void openResearchDetails(Player player, EnhancedLaboratory laboratory, String researchId) {
        ResearchProject project = RESEARCH_DATABASE.get(researchId);
        if (project == null) return;
        
        Inventory gui = Bukkit.createInventory(null, 54, 
            ChatColor.DARK_GREEN + "üî¨ " + project.getName());
        
        // –î–µ—Ç–∞–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        ItemStack details = new ItemStack(project.getIcon());
        ItemMeta detailsMeta = details.getItemMeta();
        detailsMeta.setDisplayName(ChatColor.AQUA + "üî¨ " + project.getName());
        
        List<String> lore = new ArrayList<>();
        lore.add(ChatColor.GRAY + project.getDescription());
        lore.add("");
        lore.add(ChatColor.YELLOW + "‚è±Ô∏è –í—Ä–µ–º—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: " + ChatColor.WHITE + formatTime(project.getDuration()));
        lore.add(ChatColor.YELLOW + "‚ö° –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏: " + ChatColor.WHITE + project.getEnergyRequired() + "/—Å–µ–∫");
        lore.add("");
        
        if (laboratory.isResearchCompleted(researchId)) {
            lore.add(ChatColor.GREEN + "‚úÖ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û");
        } else if (laboratory.getActiveResearch().containsKey(researchId)) {
            lore.add(ChatColor.GOLD + "üîÑ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –í –ü–†–û–¶–ï–°–°–ï");
            var activeProject = laboratory.getActiveResearch().get(researchId);
            lore.add(ChatColor.GRAY + "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + String.format("%.1f", activeProject.getProgress()) + "%");
            lore.add(ChatColor.GRAY + "–û—Å—Ç–∞–ª–æ—Å—å: " + activeProject.getEstimatedTimeString());
        } else if (canStartResearch(laboratory, project)) {
            lore.add(ChatColor.GREEN + "‚úÖ –ì–û–¢–û–í–û –ö –ó–ê–ü–£–°–ö–£");
            lore.add(ChatColor.YELLOW + "–ü–æ–º–µ—Å—Ç–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ —Å–ª–æ—Ç—ã –Ω–∏–∂–µ");
        } else {
            lore.add(ChatColor.RED + "‚ùå –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ù–ï –í–´–ü–û–õ–ù–ï–ù–´");
        }
        
        detailsMeta.setLore(lore);
        details.setItemMeta(detailsMeta);
        gui.setItem(4, details);
        
        // –°–ª–æ—Ç—ã –¥–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (3x3 —Å–µ—Ç–∫–∞)
        setupMaterialSlots(gui, project);
        
        // –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
        if (!laboratory.isResearchCompleted(researchId) && 
            !laboratory.getActiveResearch().containsKey(researchId)) {
            ItemStack startButton = new ItemStack(Material.LIME_CONCRETE);
            ItemMeta startMeta = startButton.getItemMeta();
            startMeta.setDisplayName(ChatColor.GREEN + "üöÄ –ù–ê–ß–ê–¢–¨ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï");
            startMeta.setLore(Arrays.asList(
                ChatColor.GRAY + "–ü–æ–º–µ—Å—Ç–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
                ChatColor.GRAY + "–≤ —Å–ª–æ—Ç—ã –≤—ã—à–µ –∏ –Ω–∞–∂–º–∏—Ç–µ —ç—Ç—É –∫–Ω–æ–ø–∫—É",
                "",
                canStartResearch(laboratory, project) ? 
                    ChatColor.GREEN + "–ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!" : 
                    ChatColor.RED + "–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏–ª–∏ —ç–Ω–µ—Ä–≥–∏–∏"
            ));
            startButton.setItemMeta(startMeta);
            gui.setItem(49, startButton);
        }
        
        // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        ItemStack back = new ItemStack(Material.ARROW);
        ItemMeta backMeta = back.getItemMeta();
        backMeta.setDisplayName(ChatColor.YELLOW + "‚Üê –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏");
        back.setItemMeta(backMeta);
        gui.setItem(45, back);
        
        fillTerminalBackground(gui);
        player.openInventory(gui);
        player.playSound(player.getLocation(), Sound.BLOCK_BEACON_POWER_SELECT, 0.7f, 1.3f);
    }
    
    private static void setupNavigationButtons(Inventory gui, EnhancedLaboratory laboratory) {
        // –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        ItemStack refresh = new ItemStack(Material.RECOVERY_COMPASS);
        ItemMeta refreshMeta = refresh.getItemMeta();
        refreshMeta.setDisplayName(ChatColor.AQUA + "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ");
        refreshMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
        ));
        refresh.setItemMeta(refreshMeta);
        gui.setItem(8, refresh);
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
        ItemStack settings = new ItemStack(Material.COMPARATOR);
        ItemMeta settingsMeta = settings.getItemMeta();
        settingsMeta.setDisplayName(ChatColor.GOLD + "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏");
        settingsMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏",
            ChatColor.GRAY + "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è"
        ));
        settings.setItemMeta(settingsMeta);
        gui.setItem(0, settings);
    }
    
    private static void setupActiveResearchDisplay(Inventory gui, EnhancedLaboratory laboratory) {
        int slot = 19;
        for (Map.Entry<String, com.uraniumcraft.laboratory.EnhancedResearchProject> entry : 
             laboratory.getActiveResearch().entrySet()) {
            if (slot > 25) break;
            
            ItemStack research = new ItemStack(Material.CLOCK);
            ItemMeta meta = research.getItemMeta();
            meta.setDisplayName(ChatColor.GOLD + "üîÑ " + entry.getKey());
            
            double progress = entry.getValue().getProgress();
            String progressBar = createProgressBar(progress);
            
            meta.setLore(Arrays.asList(
                ChatColor.GRAY + "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ",
                "",
                ChatColor.YELLOW + "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + progressBar,
                ChatColor.WHITE + String.format("%.1f", progress) + "%",
                ChatColor.YELLOW + "–û—Å—Ç–∞–ª–æ—Å—å: " + ChatColor.WHITE + entry.getValue().getEstimatedTimeString(),
                "",
                ChatColor.GREEN + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π"
            ));
            research.setItemMeta(meta);
            gui.setItem(slot++, research);
        }
        
        // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
        if (laboratory.getActiveResearch().isEmpty()) {
            ItemStack noResearch = new ItemStack(Material.GRAY_STAINED_GLASS_PANE);
            ItemMeta noMeta = noResearch.getItemMeta();
            noMeta.setDisplayName(ChatColor.GRAY + "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π");
            noMeta.setLore(Arrays.asList(
                ChatColor.DARK_GRAY + "–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∏–∂–µ"
            ));
            noResearch.setItemMeta(noMeta);
            gui.setItem(22, noResearch);
        }
    }
    
    private static void setupQuickAccessCategories(Inventory gui, EnhancedLaboratory laboratory) {
        // –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        ItemStack basic = new ItemStack(Material.CRAFTING_TABLE);
        ItemMeta basicMeta = basic.getItemMeta();
        basicMeta.setDisplayName(ChatColor.GREEN + "üìÅ –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏");
        basicMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–û—Å–Ω–æ–≤—ã —É—Ä–∞–Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
            ChatColor.GRAY + "‚Ä¢ –î–µ—Ç–µ–∫—Ç–æ—Ä—ã —Ä–∞–¥–∏–∞—Ü–∏–∏",
            ChatColor.GRAY + "‚Ä¢ –ó–∞—â–∏—Ç–Ω—ã–µ –∫–æ—Å—Ç—é–º—ã",
            ChatColor.GRAY + "‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        basic.setItemMeta(basicMeta);
        gui.setItem(37, basic);
        
        // –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã
        ItemStack energy = new ItemStack(Material.REDSTONE_BLOCK);
        ItemMeta energyMeta = energy.getItemMeta();
        energyMeta.setDisplayName(ChatColor.RED + "üìÅ –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã");
        energyMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–µ–π",
            ChatColor.GRAY + "‚Ä¢ –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ä–µ–∞–∫—Ç–æ—Ä—ã",
            ChatColor.GRAY + "‚Ä¢ –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–∏–ª–∏—Ç–µ–ª–∏",
            ChatColor.GRAY + "‚Ä¢ –ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        energy.setItemMeta(energyMeta);
        gui.setItem(38, energy);
        
        // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        ItemStack medical = new ItemStack(Material.BEACON);
        ItemMeta medicalMeta = medical.getItemMeta();
        medicalMeta.setDisplayName(ChatColor.GREEN + "üìÅ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏");
        medicalMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–õ–µ—á–µ–Ω–∏–µ –∏ –∑–∞—â–∏—Ç–∞ –æ—Ç —Ä–∞–¥–∏–∞—Ü–∏–∏",
            ChatColor.GRAY + "‚Ä¢ –õ–µ—á–µ–±–Ω—ã–µ –∫–∞–º–µ—Ä—ã",
            ChatColor.GRAY + "‚Ä¢ –ù–µ–π—Ç—Ä–∞–ª–∏–∑–∞—Ç–æ—Ä—ã —Ä–∞–¥–∏–∞—Ü–∏–∏",
            ChatColor.GRAY + "‚Ä¢ –ë–∏–æ-—Å–∫–∞–Ω–µ—Ä—ã",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        medical.setItemMeta(medicalMeta);
        gui.setItem(39, medical);
        
        // –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        ItemStack quantum = new ItemStack(Material.NETHER_STAR);
        ItemMeta quantumMeta = quantum.getItemMeta();
        quantumMeta.setDisplayName(ChatColor.LIGHT_PURPLE + "üìÅ –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏");
        quantumMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∫–≤–∞–Ω—Ç–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã",
            ChatColor.GRAY + "‚Ä¢ –¢–µ–ª–µ–ø–æ—Ä—Ç—ã",
            ChatColor.GRAY + "‚Ä¢ –ö–≤–∞–Ω—Ç–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã",
            ChatColor.GRAY + "‚Ä¢ –ì–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∏—Å–ø–ª–µ–∏",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        quantum.setItemMeta(quantumMeta);
        gui.setItem(40, quantum);
        
        // –ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
        ItemStack protection = new ItemStack(Material.NETHERITE_CHESTPLATE);
        ItemMeta protectionMeta = protection.getItemMeta();
        protectionMeta.setDisplayName(ChatColor.BLUE + "üìÅ –ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã");
        protectionMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∑–∞—â–∏—Ç–∞ –∏ –±—Ä–æ–Ω—è",
            ChatColor.GRAY + "‚Ä¢ –°–∏–ª–æ–≤–∞—è –±—Ä–æ–Ω—è",
            ChatColor.GRAY + "‚Ä¢ –ó–∞—â–∏—Ç–Ω—ã–µ –ø–æ–ª—è",
            ChatColor.GRAY + "‚Ä¢ –°–∏—Å—Ç–µ–º—ã –æ—á–∏—Å—Ç–∫–∏",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        protection.setItemMeta(protectionMeta);
        gui.setItem(41, protection);
        
        // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã
        ItemStack tools = new ItemStack(Material.RECOVERY_COMPASS);
        ItemMeta toolsMeta = tools.getItemMeta();
        toolsMeta.setDisplayName(ChatColor.GOLD + "üìÅ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã");
        toolsMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
            ChatColor.GRAY + "‚Ä¢ –†–µ–º–æ–Ω—Ç–Ω—ã–µ –Ω–∞–±–æ—Ä—ã",
            ChatColor.GRAY + "‚Ä¢ –°–∫–∞–Ω–µ—Ä—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
            ChatColor.GRAY + "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        tools.setItemMeta(toolsMeta);
        gui.setItem(42, tools);
    }
    
    private static void setupLaboratoryStatus(Inventory gui, EnhancedLaboratory laboratory) {
        // –°—Ç–∞—Ç—É—Å —ç–Ω–µ—Ä–≥–∏–∏
        ItemStack energyStatus = new ItemStack(Material.LIGHTNING_ROD);
        ItemMeta energyMeta = energyStatus.getItemMeta();
        energyMeta.setDisplayName(ChatColor.YELLOW + "‚ö° –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∞—Ç—É—Å");
        energyMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º—ã",
            "",
            ChatColor.YELLOW + "–≠–Ω–µ—Ä–≥–∏—è: " + ChatColor.WHITE + laboratory.getCurrentEnergy() + "/" + laboratory.getMaxEnergy(),
            ChatColor.YELLOW + "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è: " + ChatColor.GREEN + "+" + laboratory.getEnergyGeneration() + "/—Å–µ–∫",
            ChatColor.YELLOW + "–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: " + ChatColor.RED + "-" + laboratory.getEnergyConsumption() + "/—Å–µ–∫",
            "",
            getEnergyStatusColor(laboratory) + getEnergyStatusText(laboratory)
        ));
        energyStatus.setItemMeta(energyMeta);
        gui.setItem(46, energyStatus);
        
        // –°—Ç–∞—Ç—É—Å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        ItemStack storageStatus = new ItemStack(Material.CHEST);
        ItemMeta storageMeta = storageStatus.getItemMeta();
        storageMeta.setDisplayName(ChatColor.AQUA + "üì¶ –°—Ç–∞—Ç—É—Å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞");
        storageMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏",
            "",
            ChatColor.YELLOW + "–ó–∞–Ω—è—Ç–æ: " + ChatColor.WHITE + laboratory.getStorageUsage() + "/" + laboratory.getMaxStorageCapacity(),
            ChatColor.YELLOW + "–°–≤–æ–±–æ–¥–Ω–æ: " + ChatColor.GREEN + (laboratory.getMaxStorageCapacity() - laboratory.getStorageUsage()),
            "",
            getStorageStatusColor(laboratory) + getStorageStatusText(laboratory)
        ));
        storageStatus.setItemMeta(storageMeta);
        gui.setItem(47, storageStatus);
        
        // –£—Ä–æ–≤–µ–Ω—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
        ItemStack levelStatus = new ItemStack(Material.EXPERIENCE_BOTTLE);
        ItemMeta levelMeta = levelStatus.getItemMeta();
        levelMeta.setDisplayName(ChatColor.GOLD + "üèÜ –£—Ä–æ–≤–µ–Ω—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏");
        levelMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–∑–≤–∏—Ç–∏—è",
            "",
            ChatColor.YELLOW + "–£—Ä–æ–≤–µ–Ω—å: " + ChatColor.WHITE + laboratory.getLevel().getLevel() + "/5",
            ChatColor.YELLOW + "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: " + ChatColor.WHITE + laboratory.getSpecialization().getName(),
            ChatColor.YELLOW + "–ú–∞–∫—Å. –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π: " + ChatColor.WHITE + laboratory.getLevel().getMaxResearch(),
            "",
            laboratory.getLevel().getLevel() < 5 ? 
                ChatColor.GREEN + "–î–æ—Å—Ç—É–ø–Ω–æ —É–ª—É—á—à–µ–Ω–∏–µ" : 
                ChatColor.GOLD + "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å"
        ));
        levelStatus.setItemMeta(levelMeta);
        gui.setItem(48, levelStatus);
    }
    
    private static void setupCategoryResearch(Inventory gui, EnhancedLaboratory laboratory, String category) {
        int slot = 9;
        for (Map.Entry<String, ResearchProject> entry : RESEARCH_DATABASE.entrySet()) {
            if (!entry.getValue().getCategory().equals(category) || slot >= 45) continue;
            
            String researchId = entry.getKey();
            ResearchProject project = entry.getValue();
            
            ItemStack research = new ItemStack(project.getIcon());
            ItemMeta meta = research.getItemMeta();
            
            boolean completed = laboratory.isResearchCompleted(researchId);
            boolean active = laboratory.getActiveResearch().containsKey(researchId);
            boolean canStart = canStartResearch(laboratory, project);
            
            if (completed) {
                meta.setDisplayName(ChatColor.GREEN + "‚úÖ " + project.getName());
            } else if (active) {
                meta.setDisplayName(ChatColor.GOLD + "üîÑ " + project.getName());
            } else if (canStart) {
                meta.setDisplayName(ChatColor.YELLOW + "‚≠ê " + project.getName());
            } else {
                meta.setDisplayName(ChatColor.RED + "üîí " + project.getName());
            }
            
            List<String> lore = new ArrayList<>();
            lore.add(ChatColor.GRAY + project.getDescription());
            lore.add("");
            lore.add(ChatColor.YELLOW + "‚è±Ô∏è –í—Ä–µ–º—è: " + ChatColor.WHITE + formatTime(project.getDuration()));
            lore.add(ChatColor.YELLOW + "‚ö° –≠–Ω–µ—Ä–≥–∏—è: " + ChatColor.WHITE + project.getEnergyRequired() + "/—Å–µ–∫");
            lore.add("");
            
            if (completed) {
                lore.add(ChatColor.GREEN + "‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
            } else if (active) {
                var activeProject = laboratory.getActiveResearch().get(researchId);
                lore.add(ChatColor.GOLD + "üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è");
                lore.add(ChatColor.GRAY + "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + String.format("%.1f", activeProject.getProgress()) + "%");
            } else if (canStart) {
                lore.add(ChatColor.GREEN + "‚≠ê –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É");
                lore.add(ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è");
            } else {
                lore.add(ChatColor.RED + "üîí –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã");
                if (!hasPrerequisites(laboratory, project)) {
                    lore.add(ChatColor.RED + "–ù—É–∂–Ω—ã –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è");
                }
                if (!hasEnoughEnergy(laboratory, project)) {
                    lore.add(ChatColor.RED + "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏");
                }
            }
            
            meta.setLore(lore);
            research.setItemMeta(meta);
            gui.setItem(slot++, research);
        }
    }
    
    private static void setupMaterialSlots(Inventory gui, ResearchProject project) {
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        ItemStack materialsHeader = new ItemStack(Material.CHEST);
        ItemMeta headerMeta = materialsHeader.getItemMeta();
        headerMeta.setDisplayName(ChatColor.AQUA + "üì¶ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã");
        headerMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ü–æ–º–µ—Å—Ç–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ —Å–ª–æ—Ç—ã –Ω–∏–∂–µ",
            ChatColor.YELLOW + "–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω—ã"
        ));
        materialsHeader.setItemMeta(headerMeta);
        gui.setItem(13, materialsHeader);
        
        // –°–ª–æ—Ç—ã –¥–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (3x3 —Å–µ—Ç–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ)
        int[] materialSlots = {19, 20, 21, 28, 29, 30, 37, 38, 39};
        int slotIndex = 0;
        
        for (Map.Entry<Material, Integer> entry : project.getRequiredMaterials().entrySet()) {
            if (slotIndex >= materialSlots.length) break;
            
            ItemStack placeholder = new ItemStack(entry.getKey());
            ItemMeta placeholderMeta = placeholder.getItemMeta();
            placeholderMeta.setDisplayName(ChatColor.YELLOW + "–¢—Ä–µ–±—É–µ—Ç—Å—è: " + getMaterialDisplayName(entry.getKey()));
            placeholderMeta.setLore(Arrays.asList(
                ChatColor.GRAY + "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: " + ChatColor.WHITE + entry.getValue(),
                "",
                ChatColor.YELLOW + "–ü–æ–º–µ—Å—Ç–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª –≤ —ç—Ç–æ—Ç —Å–ª–æ—Ç"
            ));
            placeholder.setItemMeta(placeholderMeta);
            gui.setItem(materialSlots[slotIndex++], placeholder);
        }
    }
    
    private static void fillTerminalBackground(Inventory gui) {
        ItemStack background = new ItemStack(Material.CYAN_STAINED_GLASS_PANE);
        ItemMeta backgroundMeta = background.getItemMeta();
        backgroundMeta.setDisplayName(" ");
        background.setItemMeta(backgroundMeta);
        
        for (int i = 0; i < gui.getSize(); i++) {
            if (gui.getItem(i) == null) {
                gui.setItem(i, background);
            }
        }
    }
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    private static String getEnergyBar(EnhancedLaboratory laboratory) {
        double percentage = laboratory.getEnergyPercentage();
        int bars = (int) (percentage / 10);
        
        StringBuilder energyBar = new StringBuilder();
        for (int i = 0; i < 10; i++) {
            if (i < bars) {
                energyBar.append(ChatColor.GREEN).append("‚ñà");
            } else {
                energyBar.append(ChatColor.GRAY).append("‚ñë");
            }
        }
        return energyBar.toString();
    }
    
    private static String createProgressBar(double progress) {
        int bars = (int) (progress / 5);
        StringBuilder progressBar = new StringBuilder();
        
        for (int i = 0; i < 20; i++) {
            if (i < bars) {
                progressBar.append(ChatColor.GREEN).append("‚ñà");
            } else {
                progressBar.append(ChatColor.GRAY).append("‚ñë");
            }
        }
        return progressBar.toString();
    }
    
    private static String formatTime(long milliseconds) {
        long seconds = milliseconds / 1000;
        long minutes = seconds / 60;
        long hours = minutes / 60;
        
        if (hours > 0) {
            return hours + "—á " + (minutes % 60) + "–º";
        } else if (minutes > 0) {
            return minutes + "–º " + (seconds % 60) + "—Å";
        } else {
            return seconds + "—Å";
        }
    }
    
    private static ItemStack getCategoryIcon(String category) {
        switch (category) {
            case "–ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": return new ItemStack(Material.CRAFTING_TABLE);
            case "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã": return new ItemStack(Material.REDSTONE_BLOCK);
            case "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": return new ItemStack(Material.BEACON);
            case "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": return new ItemStack(Material.NETHER_STAR);
            case "–ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã": return new ItemStack(Material.NETHERITE_CHESTPLATE);
            case "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã": return new ItemStack(Material.RECOVERY_COMPASS);
            default: return new ItemStack(Material.BOOK);
        }
    }
    
    private static boolean canStartResearch(EnhancedLaboratory laboratory, ResearchProject project) {
        return hasPrerequisites(laboratory, project) && 
               hasEnoughEnergy(laboratory, project) &&
               !laboratory.isResearchCompleted(project.getId()) &&
               !laboratory.getActiveResearch().containsKey(project.getId());
    }
    
    private static boolean hasPrerequisites(EnhancedLaboratory laboratory, ResearchProject project) {
        for (String prerequisite : project.getPrerequisites()) {
            if (!laboratory.isResearchCompleted(prerequisite)) {
                return false;
            }
        }
        return true;
    }
    
    private static boolean hasEnoughEnergy(EnhancedLaboratory laboratory, ResearchProject project) {
        return laboratory.getCurrentEnergy() >= project.getEnergyRequired() * 10; // 10 —Å–µ–∫—É–Ω–¥ –∑–∞–ø–∞—Å–∞
    }
    
    private static String getEnergyStatusText(EnhancedLaboratory laboratory) {
        double percentage = laboratory.getEnergyPercentage();
        if (percentage > 80) return "–≠–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ";
        if (percentage > 50) return "–≠–Ω–µ—Ä–≥–∏–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã";
        if (percentage > 20) return "–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏";
        return "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏!";
    }
    
    private static ChatColor getEnergyStatusColor(EnhancedLaboratory laboratory) {
        double percentage = laboratory.getEnergyPercentage();
        if (percentage > 80) return ChatColor.GREEN;
        if (percentage > 50) return ChatColor.YELLOW;
        if (percentage > 20) return ChatColor.GOLD;
        return ChatColor.RED;
    }
    
    private static String getStorageStatusText(EnhancedLaboratory laboratory) {
        double percentage = (double) laboratory.getStorageUsage() / laboratory.getMaxStorageCapacity() * 100;
        if (percentage < 50) return "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞";
        if (percentage < 80) return "–•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è";
        if (percentage < 95) return "–ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞";
        return "–•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ—á—Ç–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ!";
    }
    
    private static ChatColor getStorageStatusColor(EnhancedLaboratory laboratory) {
        double percentage = (double) laboratory.getStorageUsage() / laboratory.getMaxStorageCapacity() * 100;
        if (percentage < 50) return ChatColor.GREEN;
        if (percentage < 80) return ChatColor.YELLOW;
        if (percentage < 95) return ChatColor.GOLD;
        return ChatColor.RED;
    }
    
    private static String getMaterialDisplayName(Material material) {
        switch (material) {
            case IRON_INGOT: return "–ñ–µ–ª–µ–∑–Ω—ã–µ —Å–ª–∏—Ç–∫–∏";
            case REDSTONE: return "–ö—Ä–∞—Å–Ω–∞—è –ø—ã–ª—å";
            case DIAMOND: return "–ê–ª–º–∞–∑—ã";
            case EMERALD: return "–ò–∑—É–º—Ä—É–¥—ã";
            case NETHER_STAR: return "–ó–≤–µ–∑–¥–∞ –ù–∏–∂–Ω–µ–≥–æ –º–∏—Ä–∞";
            case BEACON: return "–ú–∞—è–∫";
            case GOLD_INGOT: return "–ó–æ–ª–æ—Ç—ã–µ —Å–ª–∏—Ç–∫–∏";
            case QUARTZ: return "–ö–≤–∞—Ä—Ü";
            case GLOWSTONE_DUST: return "–°–≤–µ—Ç–æ–ø—ã–ª—å";
            case ENDER_PEARL: return "–ñ–µ–º—á—É–≥ –ö—Ä–∞—è";
            default: return material.name().toLowerCase().replace("_", " ");
        }
    }
    
    private static void initializeResearchDatabase() {
        // –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        RESEARCH_DATABASE.put("radiation_detector", new ResearchProject(
            "radiation_detector", "–î–µ—Ç–µ–∫—Ç–æ—Ä —Ä–∞–¥–∏–∞—Ü–∏–∏", "–ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∏–∑–º–µ—Ä–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Ä–∞–¥–∏–∞—Ü–∏–∏ –≤ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥–µ",
            Material.COMPASS, 15 * 60 * 1000, 5,
            Map.of(Material.IRON_INGOT, 8, Material.REDSTONE, 16, Material.QUARTZ, 4),
            List.of()
        ));
        
        RESEARCH_DATABASE.put("hazmat_suit", new ResearchProject(
            "hazmat_suit", "–ó–∞—â–∏—Ç–Ω—ã–π –∫–æ—Å—Ç—é–º", "–ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
            "–ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è",
            Material.LEATHER_CHESTPLATE, 20 * 60 * 1000, 8,
            Map.of(Material.LEATHER, 16, Material.IRON_INGOT, 8, Material.REDSTONE, 8),
            List.of("radiation_detector")
        ));
        
        RESEARCH_DATABASE.put("anti_radiation_pills", new ResearchProject(
            "anti_radiation_pills", "–¢–∞–±–ª–µ—Ç–∫–∏ –æ—Ç —Ä–∞–¥–∏–∞—Ü–∏–∏", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Ä–∞–¥–∏–∞—Ü–∏–∏ –≤ –æ—Ä–≥–∞–Ω–∏–∑–º–µ",
            Material.SUGAR, 25 * 60 * 1000, 6,
            Map.of(Material.SUGAR, 16, Material.GOLDEN_APPLE, 2, Material.GLOWSTONE_DUST, 8),
            List.of("radiation_detector")
        ));
        
        // –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã
        RESEARCH_DATABASE.put("energy_amplifier", new ResearchProject(
            "energy_amplifier", "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —É—Å–∏–ª–∏—Ç–µ–ª—å", "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã",
            "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
            Material.REDSTONE_BLOCK, 45 * 60 * 1000, 12,
            Map.of(Material.REDSTONE_BLOCK, 8, Material.IRON_BLOCK, 4, Material.DIAMOND, 4),
            List.of("hazmat_suit")
        ));
        
        RESEARCH_DATABASE.put("quantum_reactor", new ResearchProject(
            "quantum_reactor", "–ö–≤–∞–Ω—Ç–æ–≤—ã–π —Ä–µ–∞–∫—Ç–æ—Ä", "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã",
            "–ú–æ—â–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —ç–Ω–µ—Ä–≥–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
            Material.RESPAWN_ANCHOR, 90 * 60 * 1000, 20,
            Map.of(Material.NETHER_STAR, 2, Material.BEACON, 4, Material.OBSIDIAN, 32),
            List.of("energy_amplifier")
        ));
        
        // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        RESEARCH_DATABASE.put("healing_chamber", new ResearchProject(
            "healing_chamber", "–õ–µ—á–µ–±–Ω–∞—è –∫–∞–º–µ—Ä–∞", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∑–¥–æ—Ä–æ–≤—å—è –∏–≥—Ä–æ–∫–æ–≤",
            Material.BEACON, 60 * 60 * 1000, 15,
            Map.of(Material.BEACON, 2, Material.DIAMOND, 8, Material.EMERALD, 4),
            List.of("anti_radiation_pills")
        ));
        
        RESEARCH_DATABASE.put("bio_scanner", new ResearchProject(
            "bio_scanner", "–ë–∏–æ-—Å–∫–∞–Ω–µ—Ä", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∂–∏–≤—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–º–æ–≤",
            Material.SPYGLASS, 40 * 60 * 1000, 10,
            Map.of(Material.SPYGLASS, 2, Material.REDSTONE, 16, Material.IRON_INGOT, 8),
            List.of("healing_chamber")
        ));
        
        RESEARCH_DATABASE.put("radiation_neutralizer", new ResearchProject(
            "radiation_neutralizer", "–ù–µ–π—Ç—Ä–∞–ª–∏–∑–∞—Ç–æ—Ä —Ä–∞–¥–∏–∞—Ü–∏–∏", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–°–∏—Å—Ç–µ–º–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –æ—Ç —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è",
            Material.CONDUIT, 120 * 60 * 1000, 25,
            Map.of(Material.CONDUIT, 2, Material.PRISMARINE_CRYSTALS, 16, Material.BEACON, 2),
            List.of("bio_scanner")
        ));
        
        // –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        RESEARCH_DATABASE.put("quantum_processor", new ResearchProject(
            "quantum_processor", "–ö–≤–∞–Ω—Ç–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä", "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–π –±–ª–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤",
            Material.NETHER_STAR, 150 * 60 * 1000, 30,
            Map.of(Material.NETHER_STAR, 2, Material.DIAMOND_BLOCK, 4, Material.REDSTONE_BLOCK, 8),
            List.of("quantum_reactor")
        ));
        
        RESEARCH_DATABASE.put("teleporter", new ResearchProject(
            "teleporter", "–ö–≤–∞–Ω—Ç–æ–≤—ã–π —Ç–µ–ª–µ–ø–æ—Ä—Ç", "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–°–∏—Å—Ç–µ–º–∞ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –Ω–∞ –±–æ–ª—å—à–∏–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è",
            Material.END_PORTAL_FRAME, 240 * 60 * 1000, 40,
            Map.of(Material.ENDER_PEARL, 32, Material.NETHER_STAR, 4, Material.OBSIDIAN, 16),
            List.of("quantum_processor")
        ));
        
        RESEARCH_DATABASE.put("holographic_display", new ResearchProject(
            "holographic_display", "–ì–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏—Å–ø–ª–µ–π", "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–°–∏—Å—Ç–µ–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç—Ä—ë—Ö–º–µ—Ä–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –≤–∏–¥–µ –≥–æ–ª–æ–≥—Ä–∞–º–º",
            Material.TINTED_GLASS, 180 * 60 * 1000, 35,
            Map.of(Material.GLASS, 16, Material.GLOWSTONE, 8, Material.REDSTONE, 32),
            List.of("quantum_processor")
        ));
        
        // –ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
        RESEARCH_DATABASE.put("advanced_hazmat_suit", new ResearchProject(
            "advanced_hazmat_suit", "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∑–∞—â–∏—Ç–Ω—ã–π –∫–æ—Å—Ç—é–º", "–ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
            "–£–ª—É—á—à–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∂–∏–∑–Ω–µ–æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è",
            Material.NETHERITE_CHESTPLATE, 200 * 60 * 1000, 45,
            Map.of(Material.NETHERITE_INGOT, 8, Material.BEACON, 2, Material.DIAMOND, 16),
            List.of("radiation_neutralizer")
        ));
        
        // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã
        RESEARCH_DATABASE.put("nano_repair_kit", new ResearchProject(
            "nano_repair_kit", "–ù–∞–Ω–æ-—Ä–µ–º–æ–Ω—Ç–Ω—ã–π –Ω–∞–±–æ—Ä", "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
            Material.RECOVERY_COMPASS, 100 * 60 * 1000, 20,
            Map.of(Material.DIAMOND, 8, Material.REDSTONE, 32, Material.IRON_INGOT, 16),
            List.of("quantum_processor")
        ));
    }
}
