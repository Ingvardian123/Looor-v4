package com.uraniumcraft.gui;

import com.uraniumcraft.UraniumPlugin;
import com.uraniumcraft.items.UraniumTablet;
import com.uraniumcraft.laboratory.LaboratoryTerminal;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.format.NamedTextColor;
import net.kyori.adventure.text.format.TextDecoration;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import java.util.Arrays;
import java.util.List;
import java.util.Set;

public class TabletGUI {
    
    public static void openMainMenu(Player player, UraniumPlugin plugin) {
        Inventory gui = Bukkit.createInventory(null, 54, ChatColor.AQUA + "‚ö° –£—Ä–∞–Ω–æ–≤—ã–π –ø–ª–∞–Ω—à–µ—Ç ‚ö°");
        
        // –¶–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏
        ItemStack centrifuge = new ItemStack(Material.DISPENSER);
        ItemMeta centrifugeMeta = centrifuge.getItemMeta();
        centrifugeMeta.setDisplayName(ChatColor.AQUA + "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞–º–∏");
        centrifugeMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ö–æ–Ω—Ç—Ä–æ–ª—å –≤—Å–µ—Ö —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è"
        ));
        centrifuge.setItemMeta(centrifugeMeta);
        gui.setItem(20, centrifuge);
        
        // –†–∞–¥–∏–∞—Ü–∏—è
        ItemStack radiation = new ItemStack(Material.REDSTONE);
        ItemMeta radiationMeta = radiation.getItemMeta();
        radiationMeta.setDisplayName(ChatColor.RED + "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–¥–∏–∞—Ü–∏–∏");
        radiationMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–¥–∏–∞—Ü–∏–∏: " + 
                plugin.getRadiationManager().getRadiation(player.getUniqueId()),
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π"
        ));
        radiation.setItemMeta(radiationMeta);
        gui.setItem(22, radiation);
        
        // –¢–µ–ª–µ–ø–æ—Ä—Ç—ã
        ItemStack teleporter = new ItemStack(Material.BEACON);
        ItemMeta teleporterMeta = teleporter.getItemMeta();
        teleporterMeta.setDisplayName(ChatColor.LIGHT_PURPLE + "–°–∏—Å—Ç–µ–º–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏");
        teleporterMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞–º–∏",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è"
        ));
        teleporter.setItemMeta(teleporterMeta);
        gui.setItem(24, teleporter);
        
        // –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è
        ItemStack laboratory = new ItemStack(Material.ENCHANTING_TABLE);
        ItemMeta laboratoryMeta = laboratory.getItemMeta();
        laboratoryMeta.setDisplayName(ChatColor.LIGHT_PURPLE + "–¢–µ—Ä–º–∏–Ω–∞–ª –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏");
        
        List<LaboratoryTerminal> terminals = plugin.getLaboratoryManager().getPlayerTerminals(player.getUniqueId());
        if (terminals.isEmpty()) {
            laboratoryMeta.setLore(Arrays.asList(
                ChatColor.GRAY + "–£ –≤–∞—Å –Ω–µ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏",
                ChatColor.YELLOW + "–°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π"
            ));
        } else {
            LaboratoryTerminal terminal = terminals.get(0);
            laboratoryMeta.setLore(Arrays.asList(
                ChatColor.GRAY + "–°—Ç–∞—Ç—É—Å: " + (terminal.isActive() ? 
                    ChatColor.GREEN + "–ê–∫—Ç–∏–≤–µ–Ω" : ChatColor.RED + "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"),
                ChatColor.GRAY + "–ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π: " + terminal.getCompletedResearch().size(),
                ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è"
            ));
        }
        laboratory.setItemMeta(laboratoryMeta);
        gui.setItem(26, laboratory);
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        ItemStack stats = new ItemStack(Material.BOOK);
        ItemMeta statsMeta = stats.getItemMeta();
        statsMeta.setDisplayName(ChatColor.GOLD + "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞");
        statsMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        stats.setItemMeta(statsMeta);
        gui.setItem(40, stats);
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã
        fillEmptySlots(gui);
        
        player.openInventory(gui);
    }
    
    public static void openQuickStatus(Player player, UraniumPlugin plugin) {
        player.sendMessage(ChatColor.AQUA + "‚ö° –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ç—É—Å ‚ö°");
        player.sendMessage(ChatColor.WHITE + "–†–∞–¥–∏–∞—Ü–∏—è: " + ChatColor.RED + 
            plugin.getRadiationManager().getRadiation(player.getUniqueId()));
        
        List<LaboratoryTerminal> terminals = plugin.getLaboratoryManager().getPlayerTerminals(player.getUniqueId());
        if (!terminals.isEmpty()) {
            LaboratoryTerminal terminal = terminals.get(0);
            player.sendMessage(ChatColor.WHITE + "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è: " + 
                (terminal.isActive() ? ChatColor.GREEN + "–ê–∫—Ç–∏–≤–Ω–∞" : ChatColor.RED + "–ù–µ–∞–∫—Ç–∏–≤–Ω–∞"));
            player.sendMessage(ChatColor.WHITE + "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ: " + ChatColor.YELLOW + 
                terminal.getCompletedResearch().size());
        }
        
        int centrifuges = plugin.getCentrifugeManager().getPlayerCentrifuges(player.getUniqueId()).size();
        player.sendMessage(ChatColor.WHITE + "–¶–µ–Ω—Ç—Ä–∏—Ñ—É–≥: " + ChatColor.AQUA + centrifuges);
        
        int teleporters = plugin.getTeleporterManager().getPlayerTeleporters(player.getUniqueId()).size();
        player.sendMessage(ChatColor.WHITE + "–¢–µ–ª–µ–ø–æ—Ä—Ç–æ–≤: " + ChatColor.LIGHT_PURPLE + teleporters);
    }
    
    public static void openMainInterface(Player player, UraniumPlugin plugin) {
        ItemStack tablet = getPlayerTablet(player);
        UraniumTablet.TabletType type = UraniumTablet.getTabletType(tablet, plugin);
        
        Component title = Component.text()
            .append(Component.text("‚ö° ", NamedTextColor.YELLOW))
            .append(Component.text("–£—Ä–∞–Ω–æ–≤—ã–π –ø–ª–∞–Ω—à–µ—Ç", type != null ? type.getColor() : NamedTextColor.AQUA, TextDecoration.BOLD))
            .append(Component.text(" ‚ö°", NamedTextColor.YELLOW))
            .build();
        
        Inventory gui = Bukkit.createInventory(null, 54, title);
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ–Ω
        fillBackground(gui);
        
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å (–≤–µ—Ä—Ö)
        addInformationPanel(gui, player, plugin, tablet);
        
        // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        addMainFunctions(gui, player, plugin, tablet);
        
        // –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        if (type != null && type.ordinal() >= UraniumTablet.TabletType.ADVANCED.ordinal()) {
            addAdvancedFunctions(gui, player, plugin, tablet);
        }
        
        // –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        if (type != null && type.ordinal() >= UraniumTablet.TabletType.QUANTUM.ordinal()) {
            addQuantumFunctions(gui, player, plugin, tablet);
        }
        
        // –§—É–Ω–∫—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏
        if (type == UraniumTablet.TabletType.REALITY) {
            addRealityFunctions(gui, player, plugin, tablet);
        }
        
        // –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        addSystemFunctions(gui, player, plugin);
        
        player.openInventory(gui);
        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.8f, 1.2f);
    }
    
    private static void addInformationPanel(Inventory gui, Player player, UraniumPlugin plugin, ItemStack tablet) {
        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–≥—Ä–æ–∫–µ
        ItemStack playerInfo = new ItemStack(Material.PLAYER_HEAD);
        ItemMeta playerMeta = playerInfo.getItemMeta();
        
        playerMeta.displayName(Component.text("üë§ " + player.getName(), NamedTextColor.AQUA, TextDecoration.BOLD));
        
        int radiation = plugin.getRadiationManager().getRadiation(player);
        String world = player.getWorld().getName();
        int x = player.getLocation().getBlockX();
        int y = player.getLocation().getBlockY();
        int z = player.getLocation().getBlockZ();
        
        playerMeta.lore(Arrays.asList(
            Component.empty(),
            Component.text("‚ò¢Ô∏è –†–∞–¥–∏–∞—Ü–∏—è: " + radiation + " —Ä–∞–¥", getRadiationColor(radiation)),
            Component.text("üåç –ú–∏—Ä: " + world, NamedTextColor.GREEN),
            Component.text("üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: " + x + ", " + y + ", " + z, NamedTextColor.GRAY),
            Component.text("‚è∞ –í—Ä–µ–º—è: " + getFormattedTime(player.getWorld().getTime()), NamedTextColor.YELLOW),
            Component.empty(),
            Component.text("–°—Ç–∞—Ç—É—Å: " + getPlayerStatus(radiation), getRadiationColor(radiation))
        ));
        
        playerInfo.setItemMeta(playerMeta);
        gui.setItem(4, playerInfo);
        
        // –≠–Ω–µ—Ä–≥–∏—è –ø–ª–∞–Ω—à–µ—Ç–∞
        if (tablet != null) {
            UraniumTablet.TabletType type = UraniumTablet.getTabletType(tablet, plugin);
            int energy = UraniumTablet.getTabletEnergy(tablet, plugin);
            int maxEnergy = type != null ? type.getMaxEnergy() : 1000;
            
            gui.setItem(22, createEnergyDisplay(energy, maxEnergy, type));
        }
    }
    
    private static void addMainFunctions(Inventory gui, Player player, UraniumPlugin plugin, ItemStack tablet) {
        // –¶–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏
        gui.setItem(20, createFunctionItem(Material.BLAST_FURNACE, "‚öôÔ∏è –¶–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏", 
            "–ö–æ–Ω—Ç—Ä–æ–ª—å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –æ–±–æ–≥–∞—â–µ–Ω–∏—è", "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —É—Ä–∞–Ω–æ–≤—ã—Ö —Å–ª–∏—Ç–∫–æ–≤", 12));
        
        // –†–∞–¥–∏–∞—Ü–∏—è
        gui.setItem(21, createFunctionItem(Material.REDSTONE, "‚ò¢Ô∏è –†–∞–¥–∏–∞—Ü–∏—è", 
            "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏", "–ó–∞—â–∏—Ç–∞ –∏ –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏—è", 8));
        
        // –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è
        gui.setItem(23, createFunctionItem(Material.ENDER_PEARL, "üåÄ –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è", 
            "–°–∏—Å—Ç–µ–º–∞ –∫–≤–∞–Ω—Ç–æ–≤–æ–π —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏", "–ë—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ", 25));
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        gui.setItem(24, createFunctionItem(Material.BOOK, "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", 
            "–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞", "–ü—Ä–æ–≥—Ä–µ—Å—Å –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è", 5));
    }
    
    private static void addAdvancedFunctions(Inventory gui, Player player, UraniumPlugin plugin, ItemStack tablet) {
        // –ü–æ–∫–∞ –ø—É—Å—Ç–æ - —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    }
    
    private static void addQuantumFunctions(Inventory gui, Player player, UraniumPlugin plugin, ItemStack tablet) {
        // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∞–Ω–æ–º–∞–ª–∏–∏
        gui.setItem(32, createFunctionItem(Material.CLOCK, "‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∞–Ω–æ–º–∞–ª–∏–∏", 
            "–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ —Å —Ç–µ—á–µ–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏", "–£—Å–∫–æ—Ä–µ–Ω–∏–µ –∏ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ", 150));
        
        // –ú–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∏
        gui.setItem(33, createFunctionItem(Material.NETHER_STAR, "‚ú® –ú–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è", 
            "–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∏ –∏–∑ —ç–Ω–µ—Ä–≥–∏–∏", "–ö–≤–∞–Ω—Ç–æ–≤–∞—è –∞–ª—Ö–∏–º–∏—è", 200));
        
        // –ö–≤–∞–Ω—Ç–æ–≤—ã–µ –ø–æ—Ä—Ç–∞–ª—ã
        gui.setItem(34, createFunctionItem(Material.END_PORTAL_FRAME, "üåà –ö–≤–∞–Ω—Ç–æ–≤—ã–µ –ø–æ—Ä—Ç–∞–ª—ã", 
            "–ü–æ—Ä—Ç–∞–ª—ã –≤ –∫–≤–∞–Ω—Ç–æ–≤—ã–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è", "–ú–µ–∂–º–µ—Ä–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã", 300));
    }
    
    private static void addRealityFunctions(Inventory gui, Player player, UraniumPlugin plugin, ItemStack tablet) {
        // –ö–æ–Ω—Ç—Ä–æ–ª—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏
        gui.setItem(37, createFunctionItem(Material.COMMAND_BLOCK, "üåå –ö–æ–Ω—Ç—Ä–æ–ª—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏", 
            "–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ–º-–≤—Ä–µ–º–µ–Ω–µ–º", "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–æ–≤ —Ñ–∏–∑–∏–∫–∏", 500));
        
        // –ú–µ–∂–º–µ—Ä–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª—ã
        gui.setItem(38, createFunctionItem(Material.END_GATEWAY, "üåÄ –ú–µ–∂–º–µ—Ä–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª—ã", 
            "–î–æ—Å—Ç—É–ø –∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–º –≤—Å–µ–ª–µ–Ω–Ω—ã–º", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –º–µ–∂–¥—É –º–∏—Ä–∞–º–∏", 750));
        
        // –Ø–∫–æ—Ä—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏
        gui.setItem(39, createFunctionItem(Material.BEACON, "‚öì –Ø–∫–æ—Ä—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏", 
            "–°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞-–≤—Ä–µ–º–µ–Ω–∏", "–ó–∞—â–∏—Ç–∞ –æ—Ç –∞–Ω–æ–º–∞–ª–∏–π", 1000));
    }
    
    private static void addSystemFunctions(Inventory gui, Player player, UraniumPlugin plugin) {
        // –ú–æ–¥—É–ª–∏ –ø–ª–∞–Ω—à–µ—Ç–∞
        gui.setItem(46, createFunctionItem(Material.REDSTONE_TORCH, "üîß –ú–æ–¥—É–ª–∏", 
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è–º–∏ –ø–ª–∞–Ω—à–µ—Ç–∞", "–£–ª—É—á—à–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", 10));
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        gui.setItem(47, createFunctionItem(Material.COMPARATOR, "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", 
            "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–ª–∞–Ω—à–µ—Ç–∞", "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞", 5));
        
        // –°–ø—Ä–∞–≤–∫–∞
        gui.setItem(48, createFunctionItem(Material.WRITABLE_BOOK, "üìñ –°–ø—Ä–∞–≤–∫–∞", 
            "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "–ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", 0));
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏—è
        gui.setItem(50, createFunctionItem(Material.EXPERIENCE_BOTTLE, "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è", 
            "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–ª–∞–Ω—à–µ—Ç–∞", "–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è", 20));
        
        // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        gui.setItem(51, createFunctionItem(Material.REDSTONE_LAMP, "üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", 
            "–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º –ø–ª–∞–Ω—à–µ—Ç–∞", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏", 15));
        
        // –ó–∞–∫—Ä—ã—Ç—å
        gui.setItem(53, createFunctionItem(Material.BARRIER, "‚ùå –ó–∞–∫—Ä—ã—Ç—å", 
            "–ó–∞–∫—Ä—ã—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–ª–∞–Ω—à–µ—Ç–∞", "–í–æ–∑–≤—Ä–∞—Ç –≤ –∏–≥—Ä—É", 0));
    }
    
    public static void openModulesInterface(Player player, UraniumPlugin plugin) {
        Component title = Component.text("üîß –ú–æ–¥—É–ª–∏ –ø–ª–∞–Ω—à–µ—Ç–∞", NamedTextColor.GOLD, TextDecoration.BOLD);
        Inventory gui = Bukkit.createInventory(null, 54, title);
        
        fillBackground(gui);
        
        ItemStack tablet = getPlayerTablet(player);
        Set<UraniumTablet.TabletModule> installedModules = UraniumTablet.getTabletModules(tablet, plugin);
        
        // –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏
        int slot = 10;
        for (UraniumTablet.TabletModule module : UraniumTablet.TabletModule.values()) {
            boolean installed = installedModules.contains(module);
            Material material = installed ? Material.LIME_CONCRETE : Material.RED_CONCRETE;
            
            ItemStack moduleItem = new ItemStack(material);
            ItemMeta meta = moduleItem.getItemMeta();
            
            Component name = Component.text(module.getName(), 
                installed ? NamedTextColor.GREEN : NamedTextColor.RED, TextDecoration.BOLD);
            meta.displayName(name);
            
            meta.lore(Arrays.asList(
                Component.empty(),
                Component.text(module.getDescription(), NamedTextColor.GRAY),
                Component.empty(),
                Component.text("–≠–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: " + module.getEnergyCost(), NamedTextColor.YELLOW),
                Component.text("–°—Ç–∞—Ç—É—Å: " + (installed ? "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" : "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"), 
                    installed ? NamedTextColor.GREEN : NamedTextColor.RED),
                Component.empty(),
                installed ? 
                    Component.text("‚ñ∂ –ù–∞–∂–º–∏—Ç–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", NamedTextColor.RED) :
                    Component.text("‚ñ∂ –ù–∞–∂–º–∏—Ç–µ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏", NamedTextColor.GREEN)
            ));
            
            moduleItem.setItemMeta(meta);
            gui.setItem(slot, moduleItem);
            
            slot++;
            if (slot == 17) slot = 19;
            if (slot == 26) slot = 28;
            if (slot == 35) slot = 37;
        }
        
        // –ù–∞–∑–∞–¥
        gui.setItem(49, createFunctionItem(Material.ARROW, "‚Üê –ù–∞–∑–∞–¥", 
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "", 0));
        
        player.openInventory(gui);
        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.8f, 1.0f);
    }
    
    public static void openDiagnosticsInterface(Player player, UraniumPlugin plugin) {
        Component title = Component.text("üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–ª–∞–Ω—à–µ—Ç–∞", NamedTextColor.AQUA, TextDecoration.BOLD);
        Inventory gui = Bukkit.createInventory(null, 45, title);
        
        fillBackground(gui);
        
        ItemStack tablet = getPlayerTablet(player);
        UraniumTablet.TabletType type = UraniumTablet.getTabletType(tablet, plugin);
        int energy = UraniumTablet.getTabletEnergy(tablet, plugin);
        Set<UraniumTablet.TabletModule> modules = UraniumTablet.getTabletModules(tablet, plugin);
        
        // –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        gui.setItem(13, createDiagnosticItem(Material.EMERALD_BLOCK, "‚úÖ –û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", 
            "–ü–ª–∞–Ω—à–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ", "–í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ"));
        
        // –≠–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º–∞
        double energyPercent = type != null ? (double) energy / type.getMaxEnergy() * 100 : 0;
        Material energyMaterial = energyPercent > 50 ? Material.EMERALD_BLOCK : 
                                 energyPercent > 25 ? Material.GOLD_BLOCK : Material.REDSTONE_BLOCK;
        String energyStatus = energyPercent > 50 ? "–û—Ç–ª–∏—á–Ω–æ–µ" : 
                             energyPercent > 25 ? "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ" : "–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è";
        
        gui.setItem(20, createDiagnosticItem(energyMaterial, "üîã –≠–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º–∞", 
            "–°–æ—Å—Ç–æ—è–Ω–∏–µ: " + energyStatus, String.format("–ó–∞—Ä—è–¥: %.1f%%", energyPercent)));
        
        // –ú–æ–¥—É–ª–∏
        gui.setItem(22, createDiagnosticItem(Material.REDSTONE_TORCH, "üîß –ú–æ–¥—É–ª–∏", 
            "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–æ–¥—É–ª–µ–π: " + modules.size(), "–í—Å–µ –º–æ–¥—É–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"));
        
        // –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã
        if (type != null && type.ordinal() >= UraniumTablet.TabletType.QUANTUM.ordinal()) {
            gui.setItem(24, createDiagnosticItem(Material.END_CRYSTAL, "‚öõÔ∏è –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã", 
                "–ö–≤–∞–Ω—Ç–æ–≤–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å: 98.7%", "–§–ª—É–∫—Ç—É–∞—Ü–∏–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã"));
        }
        
        // –¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        gui.setItem(29, createFunctionItem(Material.CLOCK, "‚è±Ô∏è –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", 
            "–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º", 50));
        
        // –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞
        gui.setItem(31, createFunctionItem(Material.COMPASS, "üéØ –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞", 
            "–ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º", "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", 100));
        
        // –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫
        gui.setItem(33, createFunctionItem(Material.TNT, "üîÑ –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫", 
            "–°–±—Ä–æ—Å –∫ –∑–∞–≤–æ–¥—Å–∫–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", "‚ö†Ô∏è –û—Å—Ç–æ—Ä–æ–∂–Ω–æ! –ù–µ–æ–±—Ä–∞—Ç–∏–º–æ", 0));
        
        // –ù–∞–∑–∞–¥
        gui.setItem(40, createFunctionItem(Material.ARROW, "‚Üê –ù–∞–∑–∞–¥", 
            "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "", 0));
        
        player.openInventory(gui);
        player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_PLING, 1.0f, 1.2f);
    }
    
    private static ItemStack getPlayerTablet(Player player) {
        ItemStack mainHand = player.getInventory().getItemInMainHand();
        if (UraniumTablet.isUraniumTablet(mainHand, null)) {
            return mainHand;
        }
        
        ItemStack offHand = player.getInventory().getItemInOffHand();
        if (UraniumTablet.isUraniumTablet(offHand, null)) {
            return offHand;
        }
        
        return null;
    }
    
    private static void fillBackground(Inventory gui) {
        ItemStack glass = new ItemStack(Material.GRAY_STAINED_GLASS_PANE);
        ItemMeta glassMeta = glass.getItemMeta();
        glassMeta.displayName(Component.text(" "));
        glass.setItemMeta(glassMeta);
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –∫—Ä–∞—è –∏ –ø—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã
        for (int i = 0; i < gui.getSize(); i++) {
            if (gui.getItem(i) == null) {
                // –ö—Ä–∞—è
                if (i < 9 || i >= gui.getSize() - 9 || i % 9 == 0 || i % 9 == 8) {
                    gui.setItem(i, glass);
                }
            }
        }
    }
    
    private static void fillEmptySlots(Inventory gui) {
        ItemStack filler = new ItemStack(Material.GRAY_STAINED_GLASS_PANE);
        ItemMeta fillerMeta = filler.getItemMeta();
        fillerMeta.setDisplayName(" ");
        filler.setItemMeta(fillerMeta);
        
        for (int i = 0; i < gui.getSize(); i++) {
            if (gui.getItem(i) == null) {
                gui.setItem(i, filler);
            }
        }
    }
    
    private static ItemStack createFunctionItem(Material material, String name, String description, String details, int energyCost) {
        ItemStack item = new ItemStack(material);
        ItemMeta meta = item.getItemMeta();
        
        meta.displayName(Component.text(name, NamedTextColor.WHITE, TextDecoration.BOLD)
            .decoration(TextDecoration.ITALIC, false));
        
        List<Component> lore = Arrays.asList(
            Component.empty(),
            Component.text(description, NamedTextColor.GRAY).decoration(TextDecoration.ITALIC, false),
            details.isEmpty() ? Component.empty() : Component.text(details, NamedTextColor.DARK_GRAY).decoration(TextDecoration.ITALIC, false),
            Component.empty(),
            energyCost > 0 ? 
                Component.text("‚ö° –≠–Ω–µ—Ä–≥–∏—è: " + energyCost, NamedTextColor.YELLOW).decoration(TextDecoration.ITALIC, false) :
                Component.text("üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–æ", NamedTextColor.GREEN).decoration(TextDecoration.ITALIC, false),
            Component.empty(),
            Component.text("‚ñ∂ –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", NamedTextColor.AQUA).decoration(TextDecoration.ITALIC, false)
        );
        
        meta.lore(lore);
        item.setItemMeta(meta);
        return item;
    }
    
    private static ItemStack createDiagnosticItem(Material material, String name, String status, String details) {
        ItemStack item = new ItemStack(material);
        ItemMeta meta = item.getItemMeta();
        
        meta.displayName(Component.text(name, NamedTextColor.WHITE, TextDecoration.BOLD)
            .decoration(TextDecoration.ITALIC, false));
        
        meta.lore(Arrays.asList(
            Component.empty(),
            Component.text(status, NamedTextColor.GREEN).decoration(TextDecoration.ITALIC, false),
            Component.text(details, NamedTextColor.GRAY).decoration(TextDecoration.ITALIC, false),
            Component.empty(),
            Component.text("üìä –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", NamedTextColor.AQUA).decoration(TextDecoration.ITALIC, false)
        ));
        
        item.setItemMeta(meta);
        return item;
    }
    
    private static ItemStack createEnergyDisplay(int current, int max, UraniumTablet.TabletType type) {
        double percent = (double) current / max * 100;
        Material material = percent > 75 ? Material.EMERALD_BLOCK :
                           percent > 50 ? Material.GOLD_BLOCK :
                           percent > 25 ? Material.IRON_BLOCK : Material.REDSTONE_BLOCK;
        
        ItemStack item = new ItemStack(material);
        ItemMeta meta = item.getItemMeta();
        
        NamedTextColor color = percent > 75 ? NamedTextColor.GREEN :
                              percent > 50 ? NamedTextColor.YELLOW :
                              percent > 25 ? NamedTextColor.GOLD : NamedTextColor.RED;
        
        meta.displayName(Component.text("üîã –≠–Ω–µ—Ä–≥–∏—è –ø–ª–∞–Ω—à–µ—Ç–∞", color, TextDecoration.BOLD)
            .decoration(TextDecoration.ITALIC, false));
        
        String energyBar = createEnergyBar(percent);
        String regenRate = type != null ? String.valueOf(UraniumTablet.getEnergyRegenRate(type, Set.of())) : "10";
        
        meta.lore(Arrays.asList(
            Component.empty(),
            Component.text("–¢–µ–∫—É—â–∏–π –∑–∞—Ä—è–¥:", NamedTextColor.GRAY).decoration(TextDecoration.ITALIC, false),
            Component.text(energyBar + " " + String.format("%.1f%%", percent), color).decoration(TextDecoration.ITALIC, false),
            Component.text(current + " / " + max + " –µ–¥–∏–Ω–∏—Ü", NamedTextColor.WHITE).decoration(TextDecoration.ITALIC, false),
            Component.empty(),
            Component.text("üîÑ –†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è: +" + regenRate + "/30—Å–µ–∫", NamedTextColor.GREEN).decoration(TextDecoration.ITALIC, false),
            Component.text("‚ö° –¢–∏–ø –ø–ª–∞–Ω—à–µ—Ç–∞: " + (type != null ? type.getDisplayName() : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"), 
                type != null ? type.getColor() : NamedTextColor.GRAY).decoration(TextDecoration.ITALIC, false)
        ));
        
        item.setItemMeta(meta);
        return item;
    }
    
    private static String createEnergyBar(double percent) {
        int bars = (int) (percent / 5);
        StringBuilder bar = new StringBuilder();
        
        for (int i = 0; i < 20; i++) {
            if (i < bars) {
                bar.append("‚ñà");
            } else {
                bar.append("‚ñë");
            }
        }
        
        return bar.toString();
    }
    
    private static NamedTextColor getRadiationColor(int radiation) {
        if (radiation >= 80) return NamedTextColor.DARK_RED;
        if (radiation >= 60) return NamedTextColor.RED;
        if (radiation >= 40) return NamedTextColor.GOLD;
        if (radiation >= 20) return NamedTextColor.YELLOW;
        return NamedTextColor.GREEN;
    }
    
    private static String getPlayerStatus(int radiation) {
        if (radiation >= 80) return "–ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –°–û–°–¢–û–Ø–ù–ò–ï";
        if (radiation >= 60) return "–û–ø–∞—Å–Ω–æ–µ –æ–±–ª—É—á–µ–Ω–∏–µ";
        if (radiation >= 40) return "–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Ä–∞–¥–∏–∞—Ü–∏—è";
        if (radiation >= 20) return "–õ–µ–≥–∫–æ–µ –æ–±–ª—É—á–µ–Ω–∏–µ";
        return "–ó–¥–æ—Ä–æ–≤";
    }
    
    private static String getFormattedTime(long worldTime) {
        long hours = (worldTime / 1000 + 6) % 24;
        long minutes = (worldTime % 1000) * 60 / 1000;
        return String.format("%02d:%02d", hours, minutes);
    }
}
