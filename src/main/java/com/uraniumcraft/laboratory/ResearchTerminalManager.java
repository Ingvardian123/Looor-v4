package com.uraniumcraft.laboratory;

import com.uraniumcraft.UraniumPlugin;
import com.uraniumcraft.items.UraniumItems;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Color;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.Particle;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.inventory.InventoryCloseEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.*;

public class ResearchTerminalManager implements Listener {
    private final UraniumPlugin plugin;
    private final EnhancedLaboratoryManager laboratoryManager;
    private final Map<String, ResearchProject> researchDatabase;
    private final Map<String, Map<Material, Integer>> pendingMaterials;
    
    public ResearchTerminalManager(UraniumPlugin plugin, EnhancedLaboratoryManager laboratoryManager) {
        this.plugin = plugin;
        this.laboratoryManager = laboratoryManager;
        this.researchDatabase = new HashMap<>();
        this.pendingMaterials = new HashMap<>();
        initializeResearchDatabase();
    }
    
    // ==================== GUI METHODS ====================
    
    public void openMainTerminal(Player player, EnhancedLaboratory laboratory) {
        Inventory gui = Bukkit.createInventory(null, 54, 
            ChatColor.DARK_BLUE + "üî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ—Ä–º–∏–Ω–∞–ª");
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
        ItemStack header = new ItemStack(Material.BEACON);
        ItemMeta headerMeta = header.getItemMeta();
        headerMeta.setDisplayName(ChatColor.AQUA + "‚ö° –ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ò–ô –¢–ï–†–ú–ò–ù–ê–õ ‚ö°");
        headerMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º–∏",
            ChatColor.GRAY + "–í–µ—Ä—Å–∏—è: 3.0.1 | –°—Ç–∞—Ç—É—Å: " + ChatColor.GREEN + "–û–ù–õ–ê–ô–ù",
            "",
            ChatColor.YELLOW + "–ó–∞–≤–µ—Ä—à–µ–Ω–æ: " + ChatColor.GREEN + laboratory.getCompletedResearch().size() + ChatColor.GRAY + " –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π",
            ChatColor.YELLOW + "–ê–∫—Ç–∏–≤–Ω–æ: " + ChatColor.GOLD + laboratory.getActiveResearch().size() + ChatColor.GRAY + " –ø—Ä–æ–µ–∫—Ç–æ–≤",
            ChatColor.YELLOW + "–≠–Ω–µ—Ä–≥–∏—è: " + getEnergyBar(laboratory) + ChatColor.GRAY + " (" + laboratory.getCurrentEnergy() + "/" + laboratory.getMaxEnergy() + ")"
        ));
        header.setItemMeta(headerMeta);
        gui.setItem(4, header);
        
        // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        setupNavigationButtons(gui, laboratory);
        
        // –ê–∫—Ç–∏–≤–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        setupActiveResearchDisplay(gui, laboratory);
        
        // –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        setupQuickAccessCategories(gui, laboratory);
        
        // –°—Ç–∞—Ç—É—Å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
        setupLaboratoryStatus(gui, laboratory);
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã
        fillTerminalBackground(gui);
        
        player.openInventory(gui);
        playTerminalAccessEffect(laboratory.getTerminalLocation());
    }
    
    public void openResearchCategory(Player player, EnhancedLaboratory laboratory, String category) {
        Inventory gui = Bukkit.createInventory(null, 54, 
            ChatColor.DARK_PURPLE + "üìÅ " + category);
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        ItemStack categoryHeader = getCategoryIcon(category);
        ItemMeta categoryMeta = categoryHeader.getItemMeta();
        categoryMeta.setDisplayName(ChatColor.GOLD + "üìÅ " + category.toUpperCase());
        categoryMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
            ChatColor.GRAY + "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
            "",
            ChatColor.YELLOW + "üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü—Ä–∏–Ω–µ—Å–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
            ChatColor.YELLOW + "   –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –∏—Ö –≤ —Å–ª–æ—Ç—ã —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
        ));
        categoryHeader.setItemMeta(categoryMeta);
        gui.setItem(4, categoryHeader);
        
        // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        ItemStack back = new ItemStack(Material.ARROW);
        ItemMeta backMeta = back.getItemMeta();
        backMeta.setDisplayName(ChatColor.YELLOW + "‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é");
        backMeta.setLore(Arrays.asList(ChatColor.GRAY + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞"));
        back.setItemMeta(backMeta);
        gui.setItem(45, back);
        
        // –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        setupCategoryResearch(gui, laboratory, category);
        
        fillTerminalBackground(gui);
        player.openInventory(gui);
        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.6f, 1.2f);
    }
    
    public void openResearchDetails(Player player, EnhancedLaboratory laboratory, String researchId) {
        ResearchProject project = researchDatabase.get(researchId);
        if (project == null) return;
        
        Inventory gui = Bukkit.createInventory(null, 54, 
            ChatColor.DARK_GREEN + "üî¨ " + project.getName());
        
        // –î–µ—Ç–∞–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        ItemStack details = new ItemStack(project.getIcon());
        ItemMeta detailsMeta = details.getItemMeta();
        detailsMeta.setDisplayName(ChatColor.AQUA + "üî¨ " + project.getName());
        
        List<String> lore = new ArrayList<>();
        lore.add(ChatColor.GRAY + project.getDescription());
        lore.add("");
        lore.add(ChatColor.YELLOW + "‚è±Ô∏è –í—Ä–µ–º—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: " + ChatColor.WHITE + formatTime(project.getDuration()));
        lore.add(ChatColor.YELLOW + "‚ö° –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏: " + ChatColor.WHITE + project.getEnergyRequired() + "/—Å–µ–∫");
        lore.add("");
        
        if (laboratory.isResearchCompleted(researchId)) {
            lore.add(ChatColor.GREEN + "‚úÖ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û");
        } else if (laboratory.getActiveResearch().containsKey(researchId)) {
            lore.add(ChatColor.GOLD + "üîÑ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –í –ü–†–û–¶–ï–°–°–ï");
            var activeProject = laboratory.getActiveResearch().get(researchId);
            lore.add(ChatColor.GRAY + "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + String.format("%.1f", activeProject.getProgress()) + "%");
            lore.add(ChatColor.GRAY + "–û—Å—Ç–∞–ª–æ—Å—å: " + activeProject.getEstimatedTimeString());
        } else if (canStartResearch(laboratory, project)) {
            lore.add(ChatColor.GREEN + "‚úÖ –ì–û–¢–û–í–û –ö –ó–ê–ü–£–°–ö–£");
            lore.add(ChatColor.YELLOW + "–ü–æ–º–µ—Å—Ç–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ —Å–ª–æ—Ç—ã –Ω–∏–∂–µ");
        } else {
            lore.add(ChatColor.RED + "‚ùå –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ù–ï –í–´–ü–û–õ–ù–ï–ù–´");
        }
        
        detailsMeta.setLore(lore);
        details.setItemMeta(detailsMeta);
        gui.setItem(4, details);
        
        // –°–ª–æ—Ç—ã –¥–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (3x3 —Å–µ—Ç–∫–∞)
        setupMaterialSlots(gui, project);
        
        // –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
        if (!laboratory.isResearchCompleted(researchId) && 
            !laboratory.getActiveResearch().containsKey(researchId)) {
            ItemStack startButton = new ItemStack(Material.LIME_CONCRETE);
            ItemMeta startMeta = startButton.getItemMeta();
            startMeta.setDisplayName(ChatColor.GREEN + "üöÄ –ù–ê–ß–ê–¢–¨ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï");
            startMeta.setLore(Arrays.asList(
                ChatColor.GRAY + "–ü–æ–º–µ—Å—Ç–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
                ChatColor.GRAY + "–≤ —Å–ª–æ—Ç—ã –≤—ã—à–µ –∏ –Ω–∞–∂–º–∏—Ç–µ —ç—Ç—É –∫–Ω–æ–ø–∫—É",
                "",
                canStartResearch(laboratory, project) ? 
                    ChatColor.GREEN + "–ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!" : 
                    ChatColor.RED + "–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏–ª–∏ —ç–Ω–µ—Ä–≥–∏–∏"
            ));
            startButton.setItemMeta(startMeta);
            gui.setItem(49, startButton);
        }
        
        // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
        ItemStack back = new ItemStack(Material.ARROW);
        ItemMeta backMeta = back.getItemMeta();
        backMeta.setDisplayName(ChatColor.YELLOW + "‚Üê –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏");
        back.setItemMeta(backMeta);
        gui.setItem(45, back);
        
        fillTerminalBackground(gui);
        player.openInventory(gui);
        player.playSound(player.getLocation(), Sound.BLOCK_BEACON_POWER_SELECT, 0.7f, 1.3f);
    }
    
    // ==================== EVENT HANDLERS ====================
    
    @EventHandler
    public void onInventoryClick(InventoryClickEvent event) {
        if (!(event.getWhoClicked() instanceof Player)) return;
        
        Player player = (Player) event.getWhoClicked();
        String title = event.getView().getTitle();
        
        if (title.equals(ChatColor.DARK_BLUE + "üî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ—Ä–º–∏–Ω–∞–ª")) {
            handleMainTerminalClick(player, event);
        } else if (title.startsWith(ChatColor.DARK_PURPLE + "üìÅ ")) {
            handleCategoryClick(player, event);
        } else if (title.startsWith(ChatColor.DARK_GREEN + "üî¨ ")) {
            handleResearchDetailsClick(player, event);
        }
    }
    
    @EventHandler
    public void onInventoryClose(InventoryCloseEvent event) {
        if (!(event.getPlayer() instanceof Player)) return;
        
        Player player = (Player) event.getPlayer();
        String title = event.getView().getTitle();
        
        // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        if (title.startsWith(ChatColor.DARK_GREEN + "üî¨ ")) {
            String playerKey = player.getUniqueId().toString();
            if (pendingMaterials.containsKey(playerKey)) {
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏–≥—Ä–æ–∫—É
                Map<Material, Integer> materials = pendingMaterials.get(playerKey);
                for (Map.Entry<Material, Integer> entry : materials.entrySet()) {
                    ItemStack item = new ItemStack(entry.getKey(), entry.getValue());
                    player.getInventory().addItem(item);
                }
                pendingMaterials.remove(playerKey);
                
                player.sendMessage(ChatColor.YELLOW + "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.");
            }
        }
    }
    
    // ==================== PRIVATE METHODS ====================
    
    private void handleMainTerminalClick(Player player, InventoryClickEvent event) {
        event.setCancelled(true);
        
        ItemStack clicked = event.getCurrentItem();
        if (clicked == null || clicked.getType() == Material.AIR) return;
        
        String displayName = clicked.getItemMeta().getDisplayName();
        
        var playerLabs = laboratoryManager.getPlayerLaboratories(player.getUniqueId());
        if (playerLabs.isEmpty()) return;
        
        EnhancedLaboratory laboratory = playerLabs.get(0);
        
        if (displayName.equals(ChatColor.AQUA + "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")) {
            openMainTerminal(player, laboratory);
            player.sendMessage(ChatColor.GREEN + "–î–∞–Ω–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!");
            
        } else if (displayName.startsWith(ChatColor.GREEN + "üìÅ ") || 
                   displayName.startsWith(ChatColor.RED + "üìÅ ") ||
                   displayName.startsWith(ChatColor.LIGHT_PURPLE + "üìÅ ") ||
                   displayName.startsWith(ChatColor.BLUE + "üìÅ ") ||
                   displayName.startsWith(ChatColor.GOLD + "üìÅ ")) {
            
            String category = extractCategoryFromDisplayName(displayName);
            openResearchCategory(player, laboratory, category);
            
        } else if (displayName.startsWith(ChatColor.GOLD + "üîÑ ")) {
            // –ö–ª–∏–∫ –ø–æ –∞–∫—Ç–∏–≤–Ω–æ–º—É –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏
            String researchName = displayName.substring(4); // –£–±–∏—Ä–∞–µ–º "üîÑ "
            showActiveResearchDetails(player, laboratory, researchName);
        }
        
        // –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.5f, 1.2f);
    }
    
    private void handleCategoryClick(Player player, InventoryClickEvent event) {
        event.setCancelled(true);
        
        ItemStack clicked = event.getCurrentItem();
        if (clicked == null || clicked.getType() == Material.AIR) return;
        
        String displayName = clicked.getItemMeta().getDisplayName();
        
        var playerLabs = laboratoryManager.getPlayerLaboratories(player.getUniqueId());
        if (playerLabs.isEmpty()) return;
        
        EnhancedLaboratory laboratory = playerLabs.get(0);
        
        if (displayName.equals(ChatColor.YELLOW + "‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é")) {
            openMainTerminal(player, laboratory);
            
        } else if (displayName.startsWith(ChatColor.GREEN + "‚úÖ ") ||
                   displayName.startsWith(ChatColor.GOLD + "üîÑ ") ||
                   displayName.startsWith(ChatColor.YELLOW + "‚≠ê ") ||
                   displayName.startsWith(ChatColor.RED + "üîí ")) {
            
            String researchName = extractResearchNameFromDisplayName(displayName);
            String researchId = convertNameToId(researchName);
            openResearchDetails(player, laboratory, researchId);
        }
        
        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.4f, 1.1f);
    }
    
    private void handleResearchDetailsClick(Player player, InventoryClickEvent event) {
        event.setCancelled(true);
        
        ItemStack clicked = event.getCurrentItem();
        if (clicked == null || clicked.getType() == Material.AIR) return;
        
        String displayName = clicked.getItemMeta().getDisplayName();
        
        var playerLabs = laboratoryManager.getPlayerLaboratories(player.getUniqueId());
        if (playerLabs.isEmpty()) return;
        
        EnhancedLaboratory laboratory = playerLabs.get(0);
        
        if (displayName.equals(ChatColor.YELLOW + "‚Üê –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")) {
            openMainTerminal(player, laboratory);
            
        } else if (displayName.equals(ChatColor.GREEN + "üöÄ –ù–ê–ß–ê–¢–¨ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï")) {
            handleStartResearch(player, event, laboratory);
            
        } else if (displayName.startsWith(ChatColor.YELLOW + "–¢—Ä–µ–±—É–µ—Ç—Å—è: ")) {
            handleMaterialSlotClick(player, event);
        }
        
        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.3f, 1.0f);
    }
    
    private void handleStartResearch(Player player, InventoryClickEvent event, EnhancedLaboratory laboratory) {
        String title = event.getView().getTitle();
        String researchName = title.substring(4); // –£–±–∏—Ä–∞–µ–º "üî¨ "
        String researchId = convertNameToId(researchName);
        
        String playerKey = player.getUniqueId().toString();
        Map<Material, Integer> materials = pendingMaterials.get(playerKey);
        
        if (materials == null || materials.isEmpty()) {
            player.sendMessage(ChatColor.RED + "‚ùå –ü–æ–º–µ—Å—Ç–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ —Å–ª–æ—Ç—ã!");
            player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_BASS, 1.0f, 0.5f);
            return;
        }
        
        // –ù–∞—á–∏–Ω–∞–µ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
        if (laboratory.startResearch(researchId, materials)) {
            player.sendMessage(ChatColor.GREEN + "üöÄ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ '" + researchName + "' –Ω–∞—á–∞—Ç–æ!");
            player.sendMessage(ChatColor.YELLOW + "‚è±Ô∏è –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–π–º—ë—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...");
            
            // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
            pendingMaterials.remove(playerKey);
            
            // –≠—Ñ—Ñ–µ–∫—Ç—ã –∑–∞–ø—É—Å–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
            playResearchStartEffect(laboratory.getTerminalLocation());
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º GUI –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É —Ç–µ—Ä–º–∏–Ω–∞–ª—É
            new BukkitRunnable() {
                @Override
                public void run() {
                    openMainTerminal(player, laboratory);
                }
            }.runTaskLater(plugin, 10L);
            
        } else {
            player.sendMessage(ChatColor.RED + "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ!");
            player.sendMessage(ChatColor.GRAY + "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏.");
            player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_BASS, 1.0f, 0.5f);
        }
    }
    
    private void handleMaterialSlotClick(Player player, InventoryClickEvent event) {
        // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –∫–ª–∏–∫–∞–µ—Ç —Å –ø—Ä–µ–¥–º–µ—Ç–æ–º –≤ —Ä—É–∫–µ - –¥–æ–±–∞–≤–ª—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª
        ItemStack cursor = event.getCursor();
        if (cursor != null && cursor.getType() != Material.AIR) {
            String playerKey = player.getUniqueId().toString();
            Map<Material, Integer> materials = pendingMaterials.computeIfAbsent(playerKey, k -> new HashMap<>());
            
            Material material = cursor.getType();
            int amount = cursor.getAmount();
            
            materials.put(material, materials.getOrDefault(material, 0) + amount);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ª–æ—Ç
            ItemStack slotItem = new ItemStack(material, amount);
            ItemMeta meta = slotItem.getItemMeta();
            meta.setDisplayName(ChatColor.GREEN + "‚úÖ " + getMaterialDisplayName(material));
            meta.setLore(Arrays.asList(
                ChatColor.GRAY + "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: " + ChatColor.WHITE + amount,
                "",
                ChatColor.GREEN + "–ú–∞—Ç–µ—Ä–∏–∞–ª —Ä–∞–∑–º–µ—â—ë–Ω!"
            ));
            slotItem.setItemMeta(meta);
            event.setCurrentItem(slotItem);
            
            // –û—á–∏—â–∞–µ–º –∫—É—Ä—Å–æ—Ä
            event.setCursor(null);
            
            player.sendMessage(ChatColor.GREEN + "‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω: " + getMaterialDisplayName(material) + " x" + amount);
            player.playSound(player.getLocation(), Sound.ENTITY_ITEM_PICKUP, 0.8f, 1.2f);
        }
        // –ï—Å–ª–∏ –∫–ª–∏–∫–∞–µ—Ç –ø–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–º—É —Å–ª–æ—Ç—É - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª
        else if (event.getCurrentItem() != null && 
                 event.getCurrentItem().getItemMeta().getDisplayName().startsWith(ChatColor.GREEN + "‚úÖ ")) {
            
            ItemStack item = event.getCurrentItem();
            Material material = item.getType();
            int amount = item.getAmount();
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª –∏–≥—Ä–æ–∫—É
            player.getInventory().addItem(new ItemStack(material, amount));
            
            // –£–¥–∞–ª—è–µ–º –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
            String playerKey = player.getUniqueId().toString();
            Map<Material, Integer> materials = pendingMaterials.get(playerKey);
            if (materials != null) {
                materials.remove(material);
            }
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–æ—Ç –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
            ItemStack placeholder = new ItemStack(material);
            ItemMeta placeholderMeta = placeholder.getItemMeta();
            placeholderMeta.setDisplayName(ChatColor.YELLOW + "–¢—Ä–µ–±—É–µ—Ç—Å—è: " + getMaterialDisplayName(material));
            placeholderMeta.setLore(Arrays.asList(
                ChatColor.GRAY + "–ü–æ–º–µ—Å—Ç–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª –≤ —ç—Ç–æ—Ç —Å–ª–æ—Ç"
            ));
            placeholder.setItemMeta(placeholderMeta);
            event.setCurrentItem(placeholder);
            
            player.sendMessage(ChatColor.YELLOW + "–ú–∞—Ç–µ—Ä–∏–∞–ª –≤–æ–∑–≤—Ä–∞—â—ë–Ω: " + getMaterialDisplayName(material) + " x" + amount);
            player.playSound(player.getLocation(), Sound.ENTITY_ITEM_PICKUP, 0.6f, 0.8f);
        }
    }
    
    // ==================== SETUP METHODS ====================
    
    private void setupNavigationButtons(Inventory gui, EnhancedLaboratory laboratory) {
        // –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        ItemStack refresh = new ItemStack(Material.RECOVERY_COMPASS);
        ItemMeta refreshMeta = refresh.getItemMeta();
        refreshMeta.setDisplayName(ChatColor.AQUA + "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ");
        refreshMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
        ));
        refresh.setItemMeta(refreshMeta);
        gui.setItem(8, refresh);
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
        ItemStack settings = new ItemStack(Material.COMPARATOR);
        ItemMeta settingsMeta = settings.getItemMeta();
        settingsMeta.setDisplayName(ChatColor.GOLD + "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏");
        settingsMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏",
            ChatColor.GRAY + "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è"
        ));
        settings.setItemMeta(settingsMeta);
        gui.setItem(0, settings);
    }
    
    private void setupActiveResearchDisplay(Inventory gui, EnhancedLaboratory laboratory) {
        int slot = 19;
        for (Map.Entry<String, EnhancedResearchProject> entry : 
             laboratory.getActiveResearch().entrySet()) {
            if (slot > 25) break;
            
            ItemStack research = new ItemStack(Material.CLOCK);
            ItemMeta meta = research.getItemMeta();
            meta.setDisplayName(ChatColor.GOLD + "üîÑ " + entry.getKey());
            
            double progress = entry.getValue().getProgress();
            String progressBar = createProgressBar(progress);
            
            meta.setLore(Arrays.asList(
                ChatColor.GRAY + "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ",
                "",
                ChatColor.YELLOW + "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + progressBar,
                ChatColor.WHITE + String.format("%.1f", progress) + "%",
                ChatColor.YELLOW + "–û—Å—Ç–∞–ª–æ—Å—å: " + ChatColor.WHITE + entry.getValue().getEstimatedTimeString(),
                "",
                ChatColor.GREEN + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π"
            ));
            research.setItemMeta(meta);
            gui.setItem(slot++, research);
        }
        
        // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
        if (laboratory.getActiveResearch().isEmpty()) {
            ItemStack noResearch = new ItemStack(Material.GRAY_STAINED_GLASS_PANE);
            ItemMeta noMeta = noResearch.getItemMeta();
            noMeta.setDisplayName(ChatColor.GRAY + "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π");
            noMeta.setLore(Arrays.asList(
                ChatColor.DARK_GRAY + "–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∏–∂–µ"
            ));
            noResearch.setItemMeta(noMeta);
            gui.setItem(22, noResearch);
        }
    }
    
    private void setupQuickAccessCategories(Inventory gui, EnhancedLaboratory laboratory) {
        // –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        ItemStack basic = new ItemStack(Material.CRAFTING_TABLE);
        ItemMeta basicMeta = basic.getItemMeta();
        basicMeta.setDisplayName(ChatColor.GREEN + "üìÅ –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏");
        basicMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–û—Å–Ω–æ–≤—ã —É—Ä–∞–Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π",
            ChatColor.GRAY + "‚Ä¢ –î–µ—Ç–µ–∫—Ç–æ—Ä—ã —Ä–∞–¥–∏–∞—Ü–∏–∏",
            ChatColor.GRAY + "‚Ä¢ –ó–∞—â–∏—Ç–Ω—ã–µ –∫–æ—Å—Ç—é–º—ã",
            ChatColor.GRAY + "‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        basic.setItemMeta(basicMeta);
        gui.setItem(37, basic);
        
        // –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã
        ItemStack energy = new ItemStack(Material.REDSTONE_BLOCK);
        ItemMeta energyMeta = energy.getItemMeta();
        energyMeta.setDisplayName(ChatColor.RED + "üìÅ –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã");
        energyMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–µ–π",
            ChatColor.GRAY + "‚Ä¢ –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ä–µ–∞–∫—Ç–æ—Ä—ã",
            ChatColor.GRAY + "‚Ä¢ –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–∏–ª–∏—Ç–µ–ª–∏",
            ChatColor.GRAY + "‚Ä¢ –ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä—ã",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        energy.setItemMeta(energyMeta);
        gui.setItem(38, energy);
        
        // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        ItemStack medical = new ItemStack(Material.BEACON);
        ItemMeta medicalMeta = medical.getItemMeta();
        medicalMeta.setDisplayName(ChatColor.GREEN + "üìÅ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏");
        medicalMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–õ–µ—á–µ–Ω–∏–µ –∏ –∑–∞—â–∏—Ç–∞ –æ—Ç —Ä–∞–¥–∏–∞—Ü–∏–∏",
            ChatColor.GRAY + "‚Ä¢ –õ–µ—á–µ–±–Ω—ã–µ –∫–∞–º–µ—Ä—ã",
            ChatColor.GRAY + "‚Ä¢ –ù–µ–π—Ç—Ä–∞–ª–∏–∑–∞—Ç–æ—Ä—ã —Ä–∞–¥–∏–∞—Ü–∏–∏",
            ChatColor.GRAY + "‚Ä¢ –ë–∏–æ-—Å–∫–∞–Ω–µ—Ä—ã",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        medical.setItemMeta(medicalMeta);
        gui.setItem(39, medical);
        
        // –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        ItemStack quantum = new ItemStack(Material.NETHER_STAR);
        ItemMeta quantumMeta = quantum.getItemMeta();
        quantumMeta.setDisplayName(ChatColor.LIGHT_PURPLE + "üìÅ –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏");
        quantumMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∫–≤–∞–Ω—Ç–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã",
            ChatColor.GRAY + "‚Ä¢ –Ø–¥—Ä–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏",
            ChatColor.GRAY + "‚Ä¢ –ö–≤–∞–Ω—Ç–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã",
            ChatColor.GRAY + "‚Ä¢ –ì–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∏—Å–ø–ª–µ–∏",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        quantum.setItemMeta(quantumMeta);
        gui.setItem(40, quantum);
        
        // –ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
        ItemStack protection = new ItemStack(Material.NETHERITE_CHESTPLATE);
        ItemMeta protectionMeta = protection.getItemMeta();
        protectionMeta.setDisplayName(ChatColor.BLUE + "üìÅ –ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã");
        protectionMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∑–∞—â–∏—Ç–∞ –∏ –±—Ä–æ–Ω—è",
            ChatColor.GRAY + "‚Ä¢ –°–∏–ª–æ–≤–∞—è –±—Ä–æ–Ω—è",
            ChatColor.GRAY + "‚Ä¢ –ó–∞—â–∏—Ç–Ω—ã–µ –ø–æ–ª—è",
            ChatColor.GRAY + "‚Ä¢ –°–∏—Å—Ç–µ–º—ã –æ—á–∏—Å—Ç–∫–∏",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        protection.setItemMeta(protectionMeta);
        gui.setItem(41, protection);
        
        // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã
        ItemStack tools = new ItemStack(Material.RECOVERY_COMPASS);
        ItemMeta toolsMeta = tools.getItemMeta();
        toolsMeta.setDisplayName(ChatColor.GOLD + "üìÅ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã");
        toolsMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
            ChatColor.GRAY + "‚Ä¢ –†–µ–º–æ–Ω—Ç–Ω—ã–µ –Ω–∞–±–æ—Ä—ã",
            ChatColor.GRAY + "‚Ä¢ –°–∫–∞–Ω–µ—Ä—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
            ChatColor.GRAY + "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã",
            "",
            ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
        ));
        tools.setItemMeta(toolsMeta);
        gui.setItem(42, tools);
    }
    
    private void setupLaboratoryStatus(Inventory gui, EnhancedLaboratory laboratory) {
        // –°—Ç–∞—Ç—É—Å —ç–Ω–µ—Ä–≥–∏–∏
        ItemStack energyStatus = new ItemStack(Material.LIGHTNING_ROD);
        ItemMeta energyMeta = energyStatus.getItemMeta();
        energyMeta.setDisplayName(ChatColor.YELLOW + "‚ö° –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∞—Ç—É—Å");
        energyMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —ç–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º—ã",
            "",
            ChatColor.YELLOW + "–≠–Ω–µ—Ä–≥–∏—è: " + ChatColor.WHITE + laboratory.getCurrentEnergy() + "/" + laboratory.getMaxEnergy(),
            ChatColor.YELLOW + "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è: " + ChatColor.GREEN + "+" + laboratory.getEnergyGeneration() + "/—Å–µ–∫",
            ChatColor.YELLOW + "–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: " + ChatColor.RED + "-" + laboratory.getEnergyConsumption() + "/—Å–µ–∫",
            "",
            getEnergyStatusColor(laboratory) + getEnergyStatusText(laboratory)
        ));
        energyStatus.setItemMeta(energyMeta);
        gui.setItem(46, energyStatus);
        
        // –°—Ç–∞—Ç—É—Å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        ItemStack storageStatus = new ItemStack(Material.CHEST);
        ItemMeta storageMeta = storageStatus.getItemMeta();
        storageMeta.setDisplayName(ChatColor.AQUA + "üì¶ –°—Ç–∞—Ç—É—Å —Ö—Ä–∞–Ω–∏–ª–∏—â–∞");
        storageMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏",
            "",
            ChatColor.YELLOW + "–ó–∞–Ω—è—Ç–æ: " + ChatColor.WHITE + laboratory.getStorageUsage() + "/" + laboratory.getMaxStorageCapacity(),
            ChatColor.YELLOW + "–°–≤–æ–±–æ–¥–Ω–æ: " + ChatColor.GREEN + (laboratory.getMaxStorageCapacity() - laboratory.getStorageUsage()),
            "",
            getStorageStatusColor(laboratory) + getStorageStatusText(laboratory)
        ));
        storageStatus.setItemMeta(storageMeta);
        gui.setItem(47, storageStatus);
        
        // –£—Ä–æ–≤–µ–Ω—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
        ItemStack levelStatus = new ItemStack(Material.EXPERIENCE_BOTTLE);
        ItemMeta levelMeta = levelStatus.getItemMeta();
        levelMeta.setDisplayName(ChatColor.GOLD + "üèÜ –£—Ä–æ–≤–µ–Ω—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏");
        levelMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∞–∑–≤–∏—Ç–∏—è",
            "",
            ChatColor.YELLOW + "–£—Ä–æ–≤–µ–Ω—å: " + ChatColor.WHITE + laboratory.getLevel().getLevel() + "/5",
            ChatColor.YELLOW + "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: " + ChatColor.WHITE + laboratory.getSpecialization().getName(),
            ChatColor.YELLOW + "–ú–∞–∫—Å. –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π: " + ChatColor.WHITE + laboratory.getLevel().getMaxResearch(),
            "",
            laboratory.getLevel().getLevel() < 5 ? 
                ChatColor.GREEN + "–î–æ—Å—Ç—É–ø–Ω–æ —É–ª—É—á—à–µ–Ω–∏–µ" : 
                ChatColor.GOLD + "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å"
        ));
        levelStatus.setItemMeta(levelMeta);
        gui.setItem(48, levelStatus);
    }
    
    private void setupCategoryResearch(Inventory gui, EnhancedLaboratory laboratory, String category) {
        int slot = 9;
        for (Map.Entry<String, ResearchProject> entry : researchDatabase.entrySet()) {
            if (!entry.getValue().getCategory().equals(category) || slot >= 45) continue;
            
            String researchId = entry.getKey();
            ResearchProject project = entry.getValue();
            
            ItemStack research = new ItemStack(project.getIcon());
            ItemMeta meta = research.getItemMeta();
            
            boolean completed = laboratory.isResearchCompleted(researchId);
            boolean active = laboratory.getActiveResearch().containsKey(researchId);
            boolean canStart = canStartResearch(laboratory, project);
            
            if (completed) {
                meta.setDisplayName(ChatColor.GREEN + "‚úÖ " + project.getName());
            } else if (active) {
                meta.setDisplayName(ChatColor.GOLD + "üîÑ " + project.getName());
            } else if (canStart) {
                meta.setDisplayName(ChatColor.YELLOW + "‚≠ê " + project.getName());
            } else {
                meta.setDisplayName(ChatColor.RED + "üîí " + project.getName());
            }
            
            List<String> lore = new ArrayList<>();
            lore.add(ChatColor.GRAY + project.getDescription());
            lore.add("");
            lore.add(ChatColor.YELLOW + "‚è±Ô∏è –í—Ä–µ–º—è: " + ChatColor.WHITE + formatTime(project.getDuration()));
            lore.add(ChatColor.YELLOW + "‚ö° –≠–Ω–µ—Ä–≥–∏—è: " + ChatColor.WHITE + project.getEnergyRequired() + "/—Å–µ–∫");
            lore.add("");
            
            if (completed) {
                lore.add(ChatColor.GREEN + "‚úÖ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
            } else if (active) {
                var activeProject = laboratory.getActiveResearch().get(researchId);
                lore.add(ChatColor.GOLD + "üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è");
                lore.add(ChatColor.GRAY + "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + String.format("%.1f", activeProject.getProgress()) + "%");
            } else if (canStart) {
                lore.add(ChatColor.GREEN + "‚≠ê –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É");
                lore.add(ChatColor.YELLOW + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è");
            } else {
                lore.add(ChatColor.RED + "üîí –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã");
                if (!hasPrerequisites(laboratory, project)) {
                    lore.add(ChatColor.RED + "–ù—É–∂–Ω—ã –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è");
                }
                if (!hasEnoughEnergy(laboratory, project)) {
                    lore.add(ChatColor.RED + "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏");
                }
            }
            
            meta.setLore(lore);
            research.setItemMeta(meta);
            gui.setItem(slot++, research);
        }
    }
    
    private void setupMaterialSlots(Inventory gui, ResearchProject project) {
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        ItemStack materialsHeader = new ItemStack(Material.CHEST);
        ItemMeta headerMeta = materialsHeader.getItemMeta();
        headerMeta.setDisplayName(ChatColor.AQUA + "üì¶ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã");
        headerMeta.setLore(Arrays.asList(
            ChatColor.GRAY + "–ü–æ–º–µ—Å—Ç–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ —Å–ª–æ—Ç—ã –Ω–∏–∂–µ",
            ChatColor.YELLOW + "–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω—ã"
        ));
        materialsHeader.setItemMeta(headerMeta);
        gui.setItem(13, materialsHeader);
        
        // –°–ª–æ—Ç—ã –¥–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (3x3 —Å–µ—Ç–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ)
        int[] materialSlots = {19, 20, 21, 28, 29, 30, 37, 38, 39};
        int slotIndex = 0;
        
        for (Map.Entry<Material, Integer> entry : project.getRequiredMaterials().entrySet()) {
            if (slotIndex >= materialSlots.length) break;
            
            ItemStack placeholder = new ItemStack(entry.getKey());
            ItemMeta placeholderMeta = placeholder.getItemMeta();
            placeholderMeta.setDisplayName(ChatColor.YELLOW + "–¢—Ä–µ–±—É–µ—Ç—Å—è: " + getMaterialDisplayName(entry.getKey()));
            placeholderMeta.setLore(Arrays.asList(
                ChatColor.GRAY + "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: " + ChatColor.WHITE + entry.getValue(),
                "",
                ChatColor.YELLOW + "–ü–æ–º–µ—Å—Ç–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª –≤ —ç—Ç–æ—Ç —Å–ª–æ—Ç"
            ));
            placeholder.setItemMeta(placeholderMeta);
            gui.setItem(materialSlots[slotIndex++], placeholder);
        }
    }
    
    private void fillTerminalBackground(Inventory gui) {
        ItemStack background = new ItemStack(Material.CYAN_STAINED_GLASS_PANE);
        ItemMeta backgroundMeta = background.getItemMeta();
        backgroundMeta.setDisplayName(" ");
        background.setItemMeta(backgroundMeta);
        
        for (int i = 0; i < gui.getSize(); i++) {
            if (gui.getItem(i) == null) {
                gui.setItem(i, background);
            }
        }
    }
    
    // ==================== VISUAL EFFECTS ====================
    
    private void playTerminalAccessEffect(Location location) {
        if (location == null || location.getWorld() == null) return;
        
        location.getWorld().spawnParticle(Particle.ELECTRIC_SPARK, location.clone().add(0, 1, 0), 15, 0.5, 0.5, 0.5, 0.1);
        location.getWorld().spawnParticle(Particle.END_ROD, location.clone().add(0, 1.2, 0), 8, 0.3, 0.3, 0.3, 0.02);
        
        // –ì–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π —ç—Ñ—Ñ–µ–∫—Ç
        for (int i = 0; i < 10; i++) {
            double y = 1 + (i * 0.1);
            location.getWorld().spawnParticle(Particle.REDSTONE, location.clone().add(0, y, 0), 1, 0, 0, 0, 0,
                new Particle.DustOptions(Color.AQUA, 0.6f));
        }
        
        location.getWorld().playSound(location, Sound.BLOCK_BEACON_ACTIVATE, 0.6f, 1.8f);
        location.getWorld().playSound(location, Sound.UI_BUTTON_CLICK, 0.8f, 1.5f);
    }
    
    private void playResearchStartEffect(Location location) {
        if (location == null || location.getWorld() == null) return;
        
        // –ù–∞—á–∞–ª—å–Ω—ã–π –≤–∑—Ä—ã–≤ —ç–Ω–µ—Ä–≥–∏–∏
        location.getWorld().spawnParticle(Particle.EXPLOSION_LARGE, location.clone().add(0, 1, 0), 1);
        location.getWorld().spawnParticle(Particle.ENCHANTMENT_TABLE, location.clone().add(0, 2, 0), 40, 1.5, 1.5, 1.5, 0.2);
        location.getWorld().spawnParticle(Particle.END_ROD, location.clone().add(0, 1, 0), 25, 1, 1, 1, 0.1);
        
        // –ó–≤—É–∫–∏
        location.getWorld().playSound(location, Sound.ENTITY_LIGHTNING_BOLT_THUNDER, 0.3f, 2.0f);
        location.getWorld().playSound(location, Sound.BLOCK_ENCHANTMENT_TABLE_USE, 1.0f, 1.3f);
        
        // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
        new BukkitRunnable() {
            int ticks = 0;
            
            @Override
            public void run() {
                if (ticks >= 100) { // 5 —Å–µ–∫—É–Ω–¥
                    cancel();
                    return;
                }
                
                // –°–ø–∏—Ä–∞–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã
                double height = ticks * 0.05;
                double angle = ticks * 0.2;
                
                for (int i = 0; i < 3; i++) {
                    double spiralAngle = angle + i * (Math.PI * 2 / 3);
                    double x = Math.cos(spiralAngle) * 1.5;
                    double z = Math.sin(spiralAngle) * 1.5;
                    
                    location.getWorld().spawnParticle(Particle.REDSTONE, 
                        location.clone().add(x, 1 + height, z), 1, 0, 0, 0, 0,
                        new Particle.DustOptions(Color.LIME, 0.8f));
                }
                
                ticks++;
            }
        }.runTaskTimer(plugin, 0, 1);
    }
    
    // ==================== UTILITY METHODS ====================
    
    private void initializeResearchDatabase() {
        // –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        addResearch("radiation_detector", "–î–µ—Ç–µ–∫—Ç–æ—Ä —Ä–∞–¥–∏–∞—Ü–∏–∏", "–ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", 
            "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —Ä–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–∑–ª—É—á–µ–Ω–∏—è", Material.COMPASS, 300,
            Map.of(Material.IRON_INGOT, 4, Material.REDSTONE, 8, Material.GLASS, 2), 50);
        
        addResearch("protective_suit", "–ó–∞—â–∏—Ç–Ω—ã–π –∫–æ—Å—Ç—é–º", "–ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç —Ä–∞–¥–∏–∞—Ü–∏–∏", Material.LEATHER_CHESTPLATE, 600,
            Map.of(Material.LEATHER, 8, Material.IRON_INGOT, 4, Material.WOOL, 6), 75);
        
        addResearch("uranium_tools", "–£—Ä–∞–Ω–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", "–ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å —É—Ä–∞–Ω–æ–≤—ã–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º", Material.IRON_PICKAXE, 450,
            Map.of(UraniumItems.URANIUM_INGOT.getType(), 3, Material.IRON_INGOT, 6, Material.STICK, 2), 60);
        
        // –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã
        addResearch("quantum_reactor", "–ö–≤–∞–Ω—Ç–æ–≤—ã–π —Ä–µ–∞–∫—Ç–æ—Ä", "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã",
            "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —ç–Ω–µ—Ä–≥–∏–∏", Material.FURNACE, 1200,
            Map.of(UraniumItems.URANIUM_INGOT.getType(), 8, Material.IRON_BLOCK, 4, Material.REDSTONE_BLOCK, 2), 150);
        
        addResearch("energy_amplifier", "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —É—Å–∏–ª–∏—Ç–µ–ª—å", "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã",
            "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —ç–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º", Material.REPEATER, 900,
            Map.of(Material.GOLD_INGOT, 6, Material.REDSTONE, 16, Material.QUARTZ, 4), 120);
        
        // –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        addResearch("healing_chamber", "–õ–µ—á–µ–±–Ω–∞—è –∫–∞–º–µ—Ä–∞", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –ª–µ—á–µ–Ω–∏—è —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è", Material.BEACON, 1800,
            Map.of(Material.DIAMOND, 4, Material.EMERALD, 2, Material.GOLD_BLOCK, 3), 200);
        
        addResearch("radiation_neutralizer", "–ù–µ–π—Ç—Ä–∞–ª–∏–∑–∞—Ç–æ—Ä —Ä–∞–¥–∏–∞—Ü–∏–∏", "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–û—á–∏—â–∞–µ—Ç —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é –æ—Ç —Ä–∞–¥–∏–∞—Ü–∏–∏", Material.CONDUIT, 1500,
            Map.of(Material.PRISMARINE_CRYSTALS, 8, Material.HEART_OF_THE_SEA, 1, Material.NAUTILUS_SHELL, 4), 180);
        
        // –ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        addResearch("teleportation_core", "–Ø–¥—Ä–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏", "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–û—Å–Ω–æ–≤–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º", Material.NETHER_STAR, 2400,
            Map.of(Material.NETHER_STAR, 1, UraniumItems.URANIUM_INGOT.getType(), 12, Material.ENDER_PEARL, 8), 300);
        
        addResearch("quantum_processor", "–ö–≤–∞–Ω—Ç–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä", "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–í—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–π –±–ª–æ–∫", Material.OBSERVER, 2100,
            Map.of(Material.DIAMOND, 6, Material.REDSTONE_BLOCK, 4, Material.QUARTZ_BLOCK, 8), 250);
        
        addResearch("holographic_display", "–ì–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏—Å–ø–ª–µ–π", "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            "–¢—Ä—ë—Ö–º–µ—Ä–Ω—ã–π –ø—Ä–æ–µ–∫—Ü–∏–æ–Ω–Ω—ã–π –¥–∏—Å–ø–ª–µ–π", Material.GLASS, 1800,
            Map.of(Material.GLASS, 16, Material.GLOWSTONE_DUST, 12, Material.PRISMARINE_SHARD, 6), 220);
        
        // –ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
        addResearch("power_armor", "–°–∏–ª–æ–≤–∞—è –±—Ä–æ–Ω—è", "–ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
            "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∑–∞—â–∏—Ç–Ω–∞—è –±—Ä–æ–Ω—è —Å —ç–Ω–µ—Ä–≥–æ–ø–∏—Ç–∞–Ω–∏–µ–º", Material.NETHERITE_CHESTPLATE, 3000,
            Map.of(Material.NETHERITE_INGOT, 4, UraniumItems.URANIUM_INGOT.getType(), 16, Material.DIAMOND, 8), 400);
        
        addResearch("force_field", "–ó–∞—â–∏—Ç–Ω–æ–µ –ø–æ–ª–µ", "–ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
            "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –±–∞—Ä—å–µ—Ä –¥–ª—è –∑–∞—â–∏—Ç—ã —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏", Material.BARRIER, 2700,
            Map.of(Material.BEACON, 2, Material.DIAMOND_BLOCK, 4, Material.REDSTONE_BLOCK, 6), 350);
        
        // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã
        addResearch("repair_kit", "–†–µ–º–æ–Ω—Ç–Ω—ã–π –Ω–∞–±–æ—Ä", "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–º–æ–Ω—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è", Material.ANVIL, 1200,
            Map.of(Material.IRON_BLOCK, 3, Material.DIAMOND, 2, Material.EXPERIENCE_BOTTLE, 8), 150);
        
        addResearch("material_scanner", "–°–∫–∞–Ω–µ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤", "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ—Å—Ç–∞–≤ –∏ —Å–≤–æ–π—Å—Ç–≤–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤", Material.RECOVERY_COMPASS, 900,
            Map.of(Material.GOLD_INGOT, 4, Material.REDSTONE, 12, Material.GLASS_PANE, 8), 120);
    }
    
    private void addResearch(String id, String name, String category, String description, 
                           Material icon, int duration, Map<Material, Integer> materials, int energy) {
        ResearchProject project = new ResearchProject(id, name, category, description, icon, duration, materials, energy);
        researchDatabase.put(id, project);
    }
    
    private boolean canStartResearch(EnhancedLaboratory laboratory, ResearchProject project) {
        return hasPrerequisites(laboratory, project) && 
               hasEnoughEnergy(laboratory, project) &&
               !laboratory.isResearchCompleted(project.getId()) &&
               !laboratory.getActiveResearch().containsKey(project.getId());
    }
    
    private boolean hasPrerequisites(EnhancedLaboratory laboratory, ResearchProject project) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        for (String prerequisite : project.getPrerequisites()) {
            if (!laboratory.isResearchCompleted(prerequisite)) {
                return false;
            }
        }
        return true;
    }
    
    private boolean hasEnoughEnergy(EnhancedLaboratory laboratory, ResearchProject project) {
        return laboratory.getCurrentEnergy() >= project.getEnergyRequired() * 10; // –ú–∏–Ω–∏–º—É–º –Ω–∞ 10 —Å–µ–∫—É–Ω–¥ —Ä–∞–±–æ—Ç—ã
    }
    
    private String formatTime(int seconds) {
        int hours = seconds / 3600;
        int minutes = (seconds % 3600) / 60;
        int secs = seconds % 60;
        
        if (hours > 0) {
            return String.format("%d—á %d–º %d—Å", hours, minutes, secs);
        } else if (minutes > 0) {
            return String.format("%d–º %d—Å", minutes, secs);
        } else {
            return String.format("%d—Å", secs);
        }
    }
    
    private String createProgressBar(double progress) {
        int bars = 20;
        int filled = (int) (progress / 100.0 * bars);
        
        StringBuilder bar = new StringBuilder();
        bar.append(ChatColor.GREEN);
        for (int i = 0; i < filled; i++) {
            bar.append("‚ñà");
        }
        bar.append(ChatColor.GRAY);
        for (int i = filled; i < bars; i++) {
            bar.append("‚ñà");
        }
        
        return bar.toString();
    }
    
    private String getEnergyBar(EnhancedLaboratory laboratory) {
        double percentage = (double) laboratory.getCurrentEnergy() / laboratory.getMaxEnergy();
        int bars = 10;
        int filled = (int) (percentage * bars);
        
        StringBuilder bar = new StringBuilder();
        if (percentage > 0.6) {
            bar.append(ChatColor.GREEN);
        } else if (percentage > 0.3) {
            bar.append(ChatColor.YELLOW);
        } else {
            bar.append(ChatColor.RED);
        }
        
        for (int i = 0; i < filled; i++) {
            bar.append("‚ñà");
        }
        bar.append(ChatColor.GRAY);
        for (int i = filled; i < bars; i++) {
            bar.append("‚ñà");
        }
        
        return bar.toString();
    }
    
    private ItemStack getCategoryIcon(String category) {
        switch (category) {
            case "–ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": return new ItemStack(Material.CRAFTING_TABLE);
            case "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã": return new ItemStack(Material.REDSTONE_BLOCK);
            case "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": return new ItemStack(Material.BEACON);
            case "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": return new ItemStack(Material.NETHER_STAR);
            case "–ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã": return new ItemStack(Material.NETHERITE_CHESTPLATE);
            case "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã": return new ItemStack(Material.RECOVERY_COMPASS);
            default: return new ItemStack(Material.BOOK);
        }
    }
    
    private String extractCategoryFromDisplayName(String displayName) {
        // –£–±–∏—Ä–∞–µ–º —Ü–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã –∏ —Å–∏–º–≤–æ–ª—ã
        return displayName.replaceAll("¬ß[0-9a-fk-or]", "").replace("üìÅ ", "");
    }
    
    private String extractResearchNameFromDisplayName(String displayName) {
        // –£–±–∏—Ä–∞–µ–º —Ü–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã –∏ —Å–∏–º–≤–æ–ª—ã —Å—Ç–∞—Ç—É—Å–∞
        return displayName.replaceAll("¬ß[0-9a-fk-or]", "")
                         .replace("‚úÖ ", "")
                         .replace("üîÑ ", "")
                         .replace("‚≠ê ", "")
                         .replace("üîí ", "");
    }
    
    private String convertNameToId(String name) {
        return name.toLowerCase()
                  .replace(" ", "_")
                  .replace("—ë", "e")
                  .replace("–∞", "a")
                  .replace("–±", "b")
                  .replace("–≤", "v")
                  .replace("–≥", "g")
                  .replace("–¥", "d")
                  .replace("–µ", "e")
                  .replace("–∂", "zh")
                  .replace("–∑", "z")
                  .replace("–∏", "i")
                  .replace("–π", "y")
                  .replace("–∫", "k")
                  .replace("–ª", "l")
                  .replace("–º", "m")
                  .replace("–Ω", "n")
                  .replace("–æ", "o")
                  .replace("–ø", "p")
                  .replace("—Ä", "r")
                  .replace("—Å", "s")
                  .replace("—Ç", "t")
                  .replace("—É", "u")
                  .replace("—Ñ", "f")
                  .replace("—Ö", "h")
                  .replace("—Ü", "ts")
                  .replace("—á", "ch")
                  .replace("—à", "sh")
                  .replace("—â", "sch")
                  .replace("—ä", "")
                  .replace("—ã", "y")
                  .replace("—å", "")
                  .replace("—ç", "e")
                  .replace("—é", "yu")
                  .replace("—è", "ya");
    }
    
    private String getMaterialDisplayName(Material material) {
        return material.name().toLowerCase().replace("_", " ");
    }
    
    private void showActiveResearchDetails(Player player, EnhancedLaboratory laboratory, String researchName) {
        String researchId = convertNameToId(researchName);
        EnhancedResearchProject project = laboratory.getActiveResearch().get(researchId);
        
        if (project == null) return;
        
        player.sendMessage(ChatColor.GOLD + "=== –î–µ—Ç–∞–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è ===");
        player.sendMessage(ChatColor.YELLOW + "–ù–∞–∑–≤–∞–Ω–∏–µ: " + ChatColor.WHITE + researchName);
        player.sendMessage(ChatColor.YELLOW + "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + ChatColor.WHITE + String.format("%.1f", project.getProgress()) + "%");
        player.sendMessage(ChatColor.YELLOW + "–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: " + ChatColor.WHITE + project.getEstimatedTimeString());
        player.sendMessage(ChatColor.YELLOW + "–ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏: " + ChatColor.WHITE + project.getEnergyPerSecond() + "/—Å–µ–∫");
        
        player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_CHIME, 0.8f, 1.2f);
    }
    
    private ChatColor getEnergyStatusColor(EnhancedLaboratory laboratory) {
        double percentage = (double) laboratory.getCurrentEnergy() / laboratory.getMaxEnergy();
        if (percentage > 0.6) return ChatColor.GREEN;
        if (percentage > 0.3) return ChatColor.YELLOW;
        return ChatColor.RED;
    }
    
    private String getEnergyStatusText(EnhancedLaboratory laboratory) {
        double percentage = (double) laboratory.getCurrentEnergy() / laboratory.getMaxEnergy();
        if (percentage > 0.6) return "–≠–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º–∞ –≤ –Ω–æ—Ä–º–µ";
        if (percentage > 0.3) return "–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏";
        return "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏!";
    }
    
    private ChatColor getStorageStatusColor(EnhancedLaboratory laboratory) {
        double percentage = (double) laboratory.getStorageUsage() / laboratory.getMaxStorageCapacity();
        if (percentage < 0.7) return ChatColor.GREEN;
        if (percentage < 0.9) return ChatColor.YELLOW;
        return ChatColor.RED;
    }
    
    private String getStorageStatusText(EnhancedLaboratory laboratory) {
        double percentage = (double) laboratory.getStorageUsage() / laboratory.getMaxStorageCapacity();
        if (percentage < 0.7) return "–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞";
        if (percentage < 0.9) return "–•—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è";
        return "–•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ—á—Ç–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ!";
    }
}
