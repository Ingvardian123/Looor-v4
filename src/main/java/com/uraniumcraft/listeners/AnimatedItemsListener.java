package com.uraniumcraft.listeners;

import com.uraniumcraft.UraniumPlugin;
import com.uraniumcraft.effects.AnimatedVisualEffects;
import com.uraniumcraft.items.UraniumTablet;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerItemHeldEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.scheduler.BukkitRunnable;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

public class AnimatedItemsListener implements Listener {
    
    private final UraniumPlugin plugin;
    private final Map<UUID, Long> lastInteraction = new HashMap<>();
    private final Map<UUID, String> lastHeldItem = new HashMap<>();
    
    public AnimatedItemsListener(UraniumPlugin plugin) {
        this.plugin = plugin;
        AnimatedVisualEffects.initialize(plugin);
    }
    
    @EventHandler
    public void onPlayerJoin(PlayerJoinEvent event) {
        Player player = event.getPlayer();
        
        // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
        new BukkitRunnable() {
            @Override
            public void run() {
                if (player.isOnline()) {
                    AnimatedVisualEffects.playTabletBootupAnimation(player);
                }
            }
        }.runTaskLater(plugin, 40L); // 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
    }
    
    @EventHandler
    public void onPlayerQuit(PlayerQuitEvent event) {
        Player player = event.getPlayer();
        AnimatedVisualEffects.stopAllEffects(player);
        lastInteraction.remove(player.getUniqueId());
        lastHeldItem.remove(player.getUniqueId());
    }
    
    @EventHandler
    public void onPlayerItemHeld(PlayerItemHeldEvent event) {
        Player player = event.getPlayer();
        ItemStack newItem = player.getInventory().getItem(event.getNewSlot());
        
        if (newItem != null && newItem.hasItemMeta() && newItem.getItemMeta().hasDisplayName()) {
            String displayName = newItem.getItemMeta().getDisplayName();
            String lastItem = lastHeldItem.get(player.getUniqueId());
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –ø—Ä–µ–¥–º–µ—Ç
            if (!displayName.equals(lastItem)) {
                lastHeldItem.put(player.getUniqueId(), displayName);
                handleItemEquip(player, newItem, displayName);
            }
        } else {
            lastHeldItem.remove(player.getUniqueId());
        }
    }
    
    @EventHandler
    public void onPlayerInteract(PlayerInteractEvent event) {
        Player player = event.getPlayer();
        ItemStack item = event.getItem();
        
        if (item == null || !item.hasItemMeta() || !item.getItemMeta().hasDisplayName()) {
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞
        long currentTime = System.currentTimeMillis();
        Long lastTime = lastInteraction.get(player.getUniqueId());
        if (lastTime != null && currentTime - lastTime < 1000) {
            return; // –ö—É–ª–¥–∞—É–Ω 1 —Å–µ–∫—É–Ω–¥–∞
        }
        
        String displayName = item.getItemMeta().getDisplayName();
        Action action = event.getAction();
        
        if (action == Action.RIGHT_CLICK_AIR || action == Action.RIGHT_CLICK_BLOCK) {
            handleItemInteraction(player, item, displayName);
            lastInteraction.put(player.getUniqueId(), currentTime);
        }
    }
    
    private void handleItemEquip(Player player, ItemStack item, String displayName) {
        // –£—Ä–∞–Ω–æ–≤—ã–π –ø–ª–∞–Ω—à–µ—Ç
        if (UraniumTablet.isUraniumTablet(item, plugin)) {
            player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.5f, 1.8f);
            
            new BukkitRunnable() {
                @Override
                public void run() {
                    if (player.isOnline() && player.getInventory().getItemInMainHand().equals(item)) {
                        AnimatedVisualEffects.playTabletBootupAnimation(player);
                    }
                }
            }.runTaskLater(plugin, 10L);
        }
        
        // –†–µ–ª—å—Å–æ—Ç—Ä–æ–Ω
        else if (displayName.contains("–†–µ–ª—å—Å–æ—Ç—Ä–æ–Ω")) {
            player.playSound(player.getLocation(), Sound.BLOCK_PISTON_EXTEND, 0.8f, 0.5f);
            player.sendMessage(ChatColor.RED + "‚ö° –†–µ–ª—å—Å–æ—Ç—Ä–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω - —Å–∏—Å—Ç–µ–º–∞ –∑–∞—Ä—è–¥–∫–∏ –≥–æ—Ç–æ–≤–∞");
        }
        
        // –°–∏–ª–æ–≤–∞—è –±—Ä–æ–Ω—è
        else if (displayName.contains("—Å–∏–ª–æ–≤–æ–π –±—Ä–æ–Ω–∏")) {
            player.playSound(player.getLocation(), Sound.BLOCK_BEACON_POWER_SELECT, 0.6f, 1.2f);
            
            new BukkitRunnable() {
                @Override
                public void run() {
                    if (player.isOnline()) {
                        AnimatedVisualEffects.playPowerArmorActivation(player);
                    }
                }
            }.runTaskLater(plugin, 5L);
        }
        
        // –î–æ–∑–∏–º–µ—Ç—Ä –ì–µ–π–≥–µ—Ä–∞
        else if (displayName.contains("–î–æ–∑–∏–º–µ—Ç—Ä –ì–µ–π–≥–µ—Ä–∞")) {
            player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.4f, 2.0f);
            int radiation = plugin.getRadiationManager().getRadiation(player.getUniqueId());
            AnimatedVisualEffects.playGeigerCounterEffect(player, radiation);
        }
        
        // –ö–≤–∞–Ω—Ç–æ–≤—ã–π —Ç–µ–ª–µ–ø–æ—Ä—Ç–µ—Ä
        else if (displayName.contains("–ö–≤–∞–Ω—Ç–æ–≤—ã–π —Ç–µ–ª–µ–ø–æ—Ä—Ç–µ—Ä")) {
            player.playSound(player.getLocation(), Sound.BLOCK_CONDUIT_AMBIENT, 0.5f, 1.5f);
            player.sendMessage(ChatColor.LIGHT_PURPLE + "üåÄ –ö–≤–∞–Ω—Ç–æ–≤—ã–π —Ç–µ–ª–µ–ø–æ—Ä—Ç–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é");
        }
    }
    
    private void handleItemInteraction(Player player, ItemStack item, String displayName) {
        // –£—Ä–∞–Ω–æ–≤—ã–π –ø–ª–∞–Ω—à–µ—Ç
        if (UraniumTablet.isUraniumTablet(item, plugin)) {
            if (player.isSneaking()) {
                // –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ç—É—Å —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
                showAnimatedQuickStatus(player);
            } else {
                // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –≥–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
                AnimatedVisualEffects.playHolographicInterface(player, player.getLocation().add(0, 1.5, 0));
            }
        }
        
        // –†–µ–ª—å—Å–æ—Ç—Ä–æ–Ω
        else if (displayName.contains("–†–µ–ª—å—Å–æ—Ç—Ä–æ–Ω")) {
            if (player.isSneaking()) {
                // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞
                player.sendMessage(ChatColor.YELLOW + "üîß –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–ª—å—Å–æ—Ç—Ä–æ–Ω–∞...");
                player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 1.0f, 1.5f);
            } else {
                // –ó–∞—Ä—è–¥–∫–∞ –∏ –≤—ã—Å—Ç—Ä–µ–ª
                player.sendMessage(ChatColor.RED + "‚ö° –ó–∞—Ä—è–¥–∫–∞ —Ä–µ–ª—å—Å–æ—Ç—Ä–æ–Ω–∞...");
                AnimatedVisualEffects.playRailgunChargingEffect(player);
            }
        }
        
        // –î–æ–∑–∏–º–µ—Ç—Ä –ì–µ–π–≥–µ—Ä–∞
        else if (displayName.contains("–î–æ–∑–∏–º–µ—Ç—Ä –ì–µ–π–≥–µ—Ä–∞")) {
            int radiation = plugin.getRadiationManager().getRadiation(player.getUniqueId());
            AnimatedVisualEffects.playGeigerCounterEffect(player, radiation);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            showRadiationAnalysis(player, radiation);
        }
        
        // –ö–≤–∞–Ω—Ç–æ–≤—ã–π —Ç–µ–ª–µ–ø–æ—Ä—Ç–µ—Ä
        else if (displayName.contains("–ö–≤–∞–Ω—Ç–æ–≤—ã–π —Ç–µ–ª–µ–ø–æ—Ä—Ç–µ—Ä")) {
            player.sendMessage(ChatColor.LIGHT_PURPLE + "üåÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–≤–∞–Ω—Ç–æ–≤–æ–≥–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞...");
            AnimatedVisualEffects.playQuantumTeleporterCharging(player.getLocation());
        }
        
        // –£—Ä–∞–Ω–æ–≤–∞—è –∫–∞–ø—Å—É–ª–∞
        else if (displayName.contains("–£—Ä–∞–Ω–æ–≤–∞—è –∫–∞–ø—Å—É–ª–∞")) {
            player.sendMessage(ChatColor.GREEN + "‚ò¢ –£—Ä–∞–Ω–æ–≤–∞—è –∫–∞–ø—Å—É–ª–∞ –∏–∑–ª—É—á–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é...");
            showRadioactiveWarning(player);
        }
        
        // –¶–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞
        else if (displayName.contains("–¶–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞")) {
            player.sendMessage(ChatColor.AQUA + "‚öô –ó–∞–ø—É—Å–∫ —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏...");
            AnimatedVisualEffects.playCentrifugeOperation(player.getLocation());
        }
        
        // –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª
        else if (displayName.contains("–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª")) {
            player.sendMessage(ChatColor.BLUE + "üî¨ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–≥–æ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞...");
            AnimatedVisualEffects.playLaboratoryTerminalEffect(player.getLocation());
        }
    }
    
    private void showAnimatedQuickStatus(Player player) {
        player.sendMessage(ChatColor.AQUA + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        player.sendMessage(ChatColor.YELLOW + "üì± –ë–´–°–¢–†–´–ô –°–¢–ê–¢–£–° –ü–õ–ê–ù–®–ï–¢–ê");
        player.sendMessage(ChatColor.AQUA + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        
        // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        new BukkitRunnable() {
            int stage = 0;
            
            @Override
            public void run() {
                if (!player.isOnline()) {
                    cancel();
                    return;
                }
                
                switch (stage) {
                    case 0:
                        player.sendMessage(ChatColor.WHITE + "‚ö° –≠–Ω–µ—Ä–≥–∏—è: " + ChatColor.GREEN + "‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë 80%");
                        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.3f, 1.5f);
                        break;
                    case 1:
                        int radiation = plugin.getRadiationManager().getRadiation(player.getUniqueId());
                        ChatColor radiationColor = getRadiationColor(radiation);
                        player.sendMessage(ChatColor.WHITE + "‚ò¢ –†–∞–¥–∏–∞—Ü–∏—è: " + radiationColor + radiation + "%");
                        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.3f, 1.7f);
                        break;
                    case 2:
                        player.sendMessage(ChatColor.WHITE + "üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: " + ChatColor.YELLOW + "23¬∞C");
                        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.3f, 1.9f);
                        break;
                    case 3:
                        player.sendMessage(ChatColor.WHITE + "üì° –°–≤—è–∑—å: " + ChatColor.GREEN + "–°—Ç–∞–±–∏–ª—å–Ω–∞—è");
                        player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.3f, 2.1f);
                        break;
                    case 4:
                        player.sendMessage(ChatColor.AQUA + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
                        player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_CHIME, 0.8f, 2.0f);
                        cancel();
                        break;
                }
                stage++;
            }
        }.runTaskTimer(plugin, 0L, 10L);
    }
    
    private void showRadiationAnalysis(Player player, int radiation) {
        new BukkitRunnable() {
            int dots = 0;
            
            @Override
            public void run() {
                if (!player.isOnline() || dots > 3) {
                    if (player.isOnline()) {
                        showRadiationResults(player, radiation);
                    }
                    cancel();
                    return;
                }
                
                String dotString = ".".repeat(dots);
                player.sendMessage(ChatColor.BLUE + "üîç –ê–Ω–∞–ª–∏–∑ —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–∞" + dotString);
                player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 0.2f, 1.0f + (dots * 0.2f));
                dots++;
            }
        }.runTaskTimer(plugin, 0L, 15L);
    }
    
    private void showRadiationResults(Player player, int radiation) {
        player.sendMessage(ChatColor.BLUE + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        player.sendMessage(ChatColor.YELLOW + "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê");
        player.sendMessage(ChatColor.BLUE + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        
        ChatColor radiationColor = getRadiationColor(radiation);
        player.sendMessage(ChatColor.WHITE + "‚ò¢ –£—Ä–æ–≤–µ–Ω—å —Ä–∞–¥–∏–∞—Ü–∏–∏: " + radiationColor + radiation + "%");
        
        String status;
        String recommendation;
        
        if (radiation == 0) {
            status = ChatColor.GREEN + "‚úÖ –ë–ï–ó–û–ü–ê–°–ù–û";
            recommendation = ChatColor.WHITE + "–†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–æ–Ω –≤ –Ω–æ—Ä–º–µ";
        } else if (radiation < 20) {
            status = ChatColor.YELLOW + "‚ö† –ù–ò–ó–ö–ò–ô –†–ò–°–ö";
            recommendation = ChatColor.WHITE + "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥";
        } else if (radiation < 40) {
            status = ChatColor.GOLD + "‚ö† –°–†–ï–î–ù–ò–ô –†–ò–°–ö";
            recommendation = ChatColor.WHITE + "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞—â–∏—Ç–Ω—É—é —ç–∫–∏–ø–∏—Ä–æ–≤–∫—É";
        } else if (radiation < 60) {
            status = ChatColor.RED + "‚ö† –í–´–°–û–ö–ò–ô –†–ò–°–ö";
            recommendation = ChatColor.WHITE + "–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø–æ–∫–∏–Ω—å—Ç–µ –∑–æ–Ω—É!";
        } else if (radiation < 80) {
            status = ChatColor.RED + "‚ò¢ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô";
            recommendation = ChatColor.RED + "–û–ü–ê–°–ù–û –î–õ–Ø –ñ–ò–ó–ù–ò!";
        } else {
            status = ChatColor.DARK_RED + "‚ò† –°–ú–ï–†–¢–ï–õ–¨–ù–´–ô";
            recommendation = ChatColor.DARK_RED + "–≠–í–ê–ö–£–ê–¶–ò–Ø –ù–ï–ú–ï–î–õ–ï–ù–ù–û!";
        }
        
        player.sendMessage(ChatColor.WHITE + "–°—Ç–∞—Ç—É—Å: " + status);
        player.sendMessage(ChatColor.WHITE + "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: " + recommendation);
        player.sendMessage(ChatColor.BLUE + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        
        // –ó–≤—É–∫–æ–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
        if (radiation > 60) {
            player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_BASS, 1.0f, 0.5f);
        } else if (radiation > 40) {
            player.playSound(player.getLocation(), Sound.UI_BUTTON_CLICK, 1.0f, 0.8f);
        } else {
            player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_PLING, 0.8f, 1.5f);
        }
    }
    
    private void showRadioactiveWarning(Player player) {
        new BukkitRunnable() {
            int blinks = 0;
            
            @Override
            public void run() {
                if (!player.isOnline() || blinks >= 6) {
                    cancel();
                    return;
                }
                
                if (blinks % 2 == 0) {
                    player.sendMessage(ChatColor.RED + "‚ö†‚ö†‚ö† " + ChatColor.YELLOW + "–†–ê–î–ò–û–ê–ö–¢–ò–í–ù–´–ô –ú–ê–¢–ï–†–ò–ê–õ" + ChatColor.RED + " ‚ö†‚ö†‚ö†");
                    player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_BASS, 0.8f, 0.8f);
                } else {
                    player.sendMessage(ChatColor.DARK_RED + "‚ò¢‚ò¢‚ò¢ " + ChatColor.RED + "–°–û–ë–õ–Æ–î–ê–ô–¢–ï –û–°–¢–û–†–û–ñ–ù–û–°–¢–¨" + ChatColor.DARK_RED + " ‚ò¢‚ò¢‚ò¢");
                    player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_BASS, 0.8f, 1.2f);
                }
                
                blinks++;
            }
        }.runTaskTimer(plugin, 0L, 10L);
    }
    
    private ChatColor getRadiationColor(int radiation) {
        if (radiation < 20) return ChatColor.GREEN;
        if (radiation < 40) return ChatColor.YELLOW;
        if (radiation < 60) return ChatColor.GOLD;
        if (radiation < 80) return ChatColor.RED;
        return ChatColor.DARK_RED;
    }
}
