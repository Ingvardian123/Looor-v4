package com.uraniumcraft.listeners;

import com.uraniumcraft.UraniumPlugin;
import com.uraniumcraft.gui.EnhancedLaboratoryGUI;
import com.uraniumcraft.gui.ResearchTerminalGUI;
import com.uraniumcraft.items.AdvancedItems;
import com.uraniumcraft.laboratory.EnhancedLaboratory;
import com.uraniumcraft.laboratory.EnhancedLaboratoryManager;
import com.uraniumcraft.laboratory.LaboratorySpecialization;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.block.Block;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.Particle;

public class EnhancedLaboratoryListener implements Listener {
    private final UraniumPlugin plugin;
    private final EnhancedLaboratoryManager laboratoryManager;
    
    public EnhancedLaboratoryListener(UraniumPlugin plugin, EnhancedLaboratoryManager laboratoryManager) {
        this.plugin = plugin;
        this.laboratoryManager = laboratoryManager;
    }
    
    @EventHandler
    public void onBlockPlace(BlockPlaceEvent event) {
        Player player = event.getPlayer();
        ItemStack item = event.getItemInHand();
        
        if (item != null && item.hasItemMeta() && item.getItemMeta().hasDisplayName()) {
            String displayName = item.getItemMeta().getDisplayName();
            
            if (displayName.equals(ChatColor.LIGHT_PURPLE + "–ë–ª–æ–∫ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏")) {
                if (!player.hasPermission("uraniumcraft.admin")) {
                    event.setCancelled(true);
                    player.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π!");
                    return;
                }
                
                boolean created = laboratoryManager.createLaboratory(event.getBlock().getLocation(), player);
                if (created) {
                    player.sendMessage(ChatColor.GREEN + "‚úì –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞!");
                    player.sendMessage(ChatColor.AQUA + "–ù–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞.");
                    player.playSound(player.getLocation(), Sound.BLOCK_BEACON_ACTIVATE, 1.0f, 1.0f);
                    
                    // –≠—Ñ—Ñ–µ–∫—Ç—ã
                    event.getBlock().getWorld().spawnParticle(Particle.ENCHANTMENT_TABLE, 
                        event.getBlock().getLocation().add(0.5, 1, 0.5), 20, 0.5, 0.5, 0.5, 0.1);
                    
                    showRequiredMaterials(player);
                } else {
                    event.setCancelled(true);
                    player.sendMessage(ChatColor.RED + "–ó–¥–µ—Å—å —É–∂–µ –µ—Å—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è!");
                }
            }
        }
    }
    
    @EventHandler
    public void onPlayerInteract(PlayerInteractEvent event) {
        if (event.getClickedBlock() == null) return;
        
        Block block = event.getClickedBlock();
        EnhancedLaboratory laboratory = laboratoryManager.getLaboratory(block.getLocation());
        
        if (laboratory != null) {
            Player player = event.getPlayer();
            
            if (!laboratory.getOwner().equals(player.getUniqueId()) && !player.hasPermission("uraniumcraft.admin")) {
                player.sendMessage(ChatColor.RED + "–≠—Ç–æ –Ω–µ –≤–∞—à–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è!");
                player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_BASS, 1.0f, 0.5f);
                return;
            }
            
            if (laboratory.getState() == EnhancedLaboratory.LaboratoryState.OPERATIONAL) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–ª–∏–∫–Ω—É–ª –ª–∏ –∏–≥—Ä–æ–∫ –ø–æ —Ç–µ—Ä–º–∏–Ω–∞–ª—É –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
                if (laboratory.getTerminalLocation() != null && 
                    block.getLocation().equals(laboratory.getTerminalLocation())) {
                    ResearchTerminalGUI.openMainMenu(player, laboratory);
                    player.playSound(player.getLocation(), Sound.BLOCK_BEACON_ACTIVATE, 0.8f, 1.5f);
                } else {
                    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ GUI –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
                    EnhancedLaboratoryGUI.openMainMenu(player, laboratory);
                    player.playSound(player.getLocation(), Sound.BLOCK_BEACON_AMBIENT, 1.0f, 1.0f);
                }
            } else {
                showConstructionStatus(player, laboratory);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∏–≥—Ä–æ–∫–∞ –Ω—É–∂–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
                ItemStack handItem = player.getInventory().getItemInMainHand();
                if (handItem != null && handItem.getType() != Material.AIR) {
                    Material material = handItem.getType();
                    int amount = handItem.getAmount();
                    
                    if (laboratory.addMaterial(material, amount)) {
                        player.getInventory().setItemInMainHand(null);
                        player.sendMessage(ChatColor.GREEN + "‚úì –ú–∞—Ç–µ—Ä–∏–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω!");
                        player.sendMessage(ChatColor.YELLOW + "–ü—Ä–æ–≥—Ä–µ—Å—Å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞: " + 
                                         laboratory.getConstructionProgress() + "%");
                        
                        // –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
                        player.playSound(player.getLocation(), Sound.BLOCK_ANVIL_USE, 1.0f, 1.5f);
                        
                        // –ß–∞—Å—Ç–∏—Ü—ã
                        block.getWorld().spawnParticle(Particle.CRIT, 
                            block.getLocation().add(0.5, 1, 0.5), 10, 0.3, 0.3, 0.3, 0.1);
                        
                        if (laboratory.getState() == EnhancedLaboratory.LaboratoryState.OPERATIONAL) {
                            player.sendMessage(ChatColor.GOLD + "üéâ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞!");
                            player.sendMessage(ChatColor.AQUA + "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è!");
                            player.sendMessage(ChatColor.LIGHT_PURPLE + "üí° –ö–ª–∏–∫–Ω–∏—Ç–µ –ø–æ —Ç–µ—Ä–º–∏–Ω–∞–ª—É –≤ —Ü–µ–Ω—Ç—Ä–µ –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π!");
                            player.playSound(player.getLocation(), Sound.UI_TOAST_CHALLENGE_COMPLETE, 1.0f, 1.0f);
                            
                            // –≠—Ñ—Ñ–µ–∫—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞
                            block.getWorld().spawnParticle(Particle.FIREWORKS_SPARK, 
                                block.getLocation().add(0.5, 3, 0.5), 50, 2, 2, 2, 0.2);
                            block.getWorld().spawnParticle(Particle.TOTEM, 
                                block.getLocation().add(0.5, 2, 0.5), 30, 1, 1, 1, 0.1);
                        }
                    } else {
                        player.sendMessage(ChatColor.GRAY + "–≠—Ç–æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª –Ω–µ –Ω—É–∂–µ–Ω –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞.");
                    }
                }
            }
            
            event.setCancelled(true);
        }
    }
    
    @EventHandler
    public void onInventoryClick(InventoryClickEvent event) {
        if (!(event.getWhoClicked() instanceof Player)) return;
        
        Player player = (Player) event.getWhoClicked();
        String title = event.getView().getTitle();
        
        if (title.startsWith(ChatColor.DARK_PURPLE + "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è")) {
            handleLaboratoryMenuClick(player, event);
        } else if (title.equals(ChatColor.BLUE + "–í—ã–±–æ—Ä —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")) {
            handleSpecializationClick(player, event);
        } else if (title.equals(ChatColor.GOLD + "–•—Ä–∞–Ω–∏–ª–∏—â–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏")) {
            handleStorageClick(player, event);
        } else if (title.equals(ChatColor.DARK_BLUE + "–¢–µ—Ä–º–∏–Ω–∞–ª –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π")) {
            handleResearchTerminalClick(player, event);
        } else if (title.startsWith(ChatColor.DARK_PURPLE + "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:")) {
            handleResearchCategoryClick(player, event);
        }
    }
    
    private void handleLaboratoryMenuClick(Player player, InventoryClickEvent event) {
        event.setCancelled(true);
        
        ItemStack clicked = event.getCurrentItem();
        if (clicked == null || clicked.getType() == Material.AIR) return;
        
        String displayName = clicked.getItemMeta().getDisplayName();
        
        // –ü–æ–ª—É—á–∞–µ–º –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ –∏–≥—Ä–æ–∫–∞
        var playerLabs = laboratoryManager.getPlayerLaboratories(player.getUniqueId());
        if (playerLabs.isEmpty()) return;
        
        EnhancedLaboratory laboratory = playerLabs.get(0);
        
        if (displayName.equals(ChatColor.LIGHT_PURPLE + "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è")) {
            ResearchTerminalGUI.openMainMenu(player, laboratory);
        } else if (displayName.equals(ChatColor.GOLD + "–•—Ä–∞–Ω–∏–ª–∏—â–µ")) {
            EnhancedLaboratoryGUI.openStorageMenu(player, laboratory);
        } else if (displayName.equals(ChatColor.BLUE + "–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è")) {
            EnhancedLaboratoryGUI.openSpecializationMenu(player, laboratory);
        } else if (displayName.equals(ChatColor.GOLD + "–£–ª—É—á—à–µ–Ω–∏—è")) {
            if (laboratory.upgradeLevel()) {
                player.sendMessage(ChatColor.GREEN + "–£–ª—É—á—à–µ–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ –Ω–∞—á–∞—Ç–æ!");
                player.closeInventory();
            } else {
                player.sendMessage(ChatColor.RED + "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é!");
            }
        } else if (displayName.equals(ChatColor.YELLOW + "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è")) {
            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é
            laboratory.setAutoResearch(!laboratory.isAutoResearch());
            laboratory.setAutoUpgrade(!laboratory.isAutoUpgrade());
            player.sendMessage(ChatColor.GREEN + "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω—ã!");
            EnhancedLaboratoryGUI.openMainMenu(player, laboratory);
        }
    }
    
    private void handleSpecializationClick(Player player, InventoryClickEvent event) {
        event.setCancelled(true);
        
        ItemStack clicked = event.getCurrentItem();
        if (clicked == null || clicked.getType() == Material.AIR) return;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ –∏–∫–æ–Ω–∫–µ
        for (LaboratorySpecialization spec : LaboratorySpecialization.values()) {
            if (clicked.getType() == spec.getIcon()) {
                var playerLabs = laboratoryManager.getPlayerLaboratories(player.getUniqueId());
                if (!playerLabs.isEmpty()) {
                    EnhancedLaboratory laboratory = playerLabs.get(0);
                    laboratory.setSpecialization(spec);
                    player.closeInventory();
                    EnhancedLaboratoryGUI.openMainMenu(player, laboratory);
                }
                break;
            }
        }
    }
    
    private void handleStorageClick(Player player, InventoryClickEvent event) {
        event.setCancelled(true);
        
        ItemStack clicked = event.getCurrentItem();
        if (clicked == null || clicked.getType() == Material.AIR) return;
        
        if (clicked.getItemMeta().getLore().contains(ChatColor.GREEN + "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è")) {
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
            var playerLabs = laboratoryManager.getPlayerLaboratories(player.getUniqueId());
            if (!playerLabs.isEmpty()) {
                EnhancedLaboratory laboratory = playerLabs.get(0);
                Material material = clicked.getType();
                
                if (laboratory.getStorage().removeMaterial(material, 1)) {
                    player.getInventory().addItem(new ItemStack(material, 1));
                    player.sendMessage(ChatColor.GREEN + "–ú–∞—Ç–µ—Ä–∏–∞–ª –∏–∑–≤–ª–µ—á—ë–Ω!");
                    EnhancedLaboratoryGUI.openStorageMenu(player, laboratory);
                }
            }
        }
    }
    
    private void handleResearchTerminalClick(Player player, InventoryClickEvent event) {
        event.setCancelled(true);
        
        ItemStack clicked = event.getCurrentItem();
        if (clicked == null || clicked.getType() == Material.AIR) return;
        
        String displayName = clicked.getItemMeta().getDisplayName();
        
        var playerLabs = laboratoryManager.getPlayerLaboratories(player.getUniqueId());
        if (playerLabs.isEmpty()) return;
        
        EnhancedLaboratory laboratory = playerLabs.get(0);
        
        if (displayName.equals(ChatColor.GREEN + "–ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")) {
            ResearchTerminalGUI.openResearchCategory(player, laboratory, "–ë–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏");
        } else if (displayName.equals(ChatColor.RED + "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã")) {
            ResearchTerminalGUI.openResearchCategory(player, laboratory, "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Å—Ç–µ–º—ã");
        } else if (displayName.equals(ChatColor.GREEN + "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")) {
            ResearchTerminalGUI.openResearchCategory(player, laboratory, "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏");
        } else if (displayName.equals(ChatColor.LIGHT_PURPLE + "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")) {
            ResearchTerminalGUI.openResearchCategory(player, laboratory, "–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏");
        } else if (displayName.equals(ChatColor.BLUE + "–ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã")) {
            ResearchTerminalGUI.openResearchCategory(player, laboratory, "–ó–∞—â–∏—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã");
        } else if (displayName.equals(ChatColor.GOLD + "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã")) {
            ResearchTerminalGUI.openResearchCategory(player, laboratory, "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —É—Ç–∏–ª–∏—Ç—ã");
        }
    }
    
    private void handleResearchCategoryClick(Player player, InventoryClickEvent event) {
        event.setCancelled(true);
        
        ItemStack clicked = event.getCurrentItem();
        if (clicked == null || clicked.getType() == Material.AIR) return;
        
        String displayName = clicked.getItemMeta().getDisplayName();
        
        if (displayName.equals(ChatColor.YELLOW + "‚Üê –ù–∞–∑–∞–¥")) {
            var playerLabs = laboratoryManager.getPlayerLaboratories(player.getUniqueId());
            if (!playerLabs.isEmpty()) {
                ResearchTerminalGUI.openMainMenu(player, playerLabs.get(0));
            }
        } else if (displayName.startsWith(ChatColor.YELLOW.toString())) {
            // –ù–∞—á–∏–Ω–∞–µ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
            String researchName = displayName.substring(2); // –£–±–∏—Ä–∞–µ–º —Ü–≤–µ—Ç –∏ –ø—Ä–æ–±–µ–ª
            
            var playerLabs = laboratoryManager.getPlayerLaboratories(player.getUniqueId());
            if (!playerLabs.isEmpty()) {
                EnhancedLaboratory laboratory = playerLabs.get(0);
                
                // –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏ –Ω–∞—á–∞—Ç—å –µ–≥–æ
                // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ —É–≤–µ–¥–æ–º–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
                player.sendMessage(ChatColor.GREEN + "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ " + researchName + " –Ω–∞—á–∞—Ç–æ!");
                player.playSound(player.getLocation(), Sound.BLOCK_BEACON_POWER_SELECT, 1.0f, 1.2f);
                player.closeInventory();
            }
        }
    }
    
    private void showRequiredMaterials(Player player) {
        player.sendMessage(ChatColor.GOLD + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        player.sendMessage(ChatColor.YELLOW + "üèóÔ∏è –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞:");
        player.sendMessage("");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.GRAY + "–ö–≤–∞—Ä—Ü–µ–≤—ã–µ –±–ª–æ–∫–∏: " + ChatColor.YELLOW + "128");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.GRAY + "–ñ–µ–ª–µ–∑–Ω—ã–µ –±–ª–æ–∫–∏: " + ChatColor.YELLOW + "64");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.AQUA + "–°—Ç–µ–∫–ª–æ: " + ChatColor.YELLOW + "96");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.RED + "–†–µ–¥—Å—Ç–æ—É–Ω –±–ª–æ–∫–∏: " + ChatColor.YELLOW + "32");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.AQUA + "–ê–ª–º–∞–∑–Ω—ã–µ –±–ª–æ–∫–∏: " + ChatColor.YELLOW + "16");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.GREEN + "–ò–∑—É–º—Ä—É–¥–Ω—ã–µ –±–ª–æ–∫–∏: " + ChatColor.YELLOW + "8");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.LIGHT_PURPLE + "–ú–∞—è–∫–∏: " + ChatColor.YELLOW + "4");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.DARK_PURPLE + "–ó–≤—ë–∑–¥—ã –ù–∏–∂–Ω–µ–≥–æ –º–∏—Ä–∞: " + ChatColor.YELLOW + "2");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.YELLOW + "–°–≤–µ—Ç–æ–∫–∞–º–µ–Ω—å: " + ChatColor.YELLOW + "64");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.DARK_PURPLE + "–û–±—Å–∏–¥–∏–∞–Ω: " + ChatColor.YELLOW + "32");
        player.sendMessage("");
        player.sendMessage(ChatColor.GOLD + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        player.sendMessage(ChatColor.GRAY + "–î–µ—Ä–∂–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ —Ä—É–∫–µ –∏ –∫–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –±–ª–æ–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏");
        player.sendMessage(ChatColor.LIGHT_PURPLE + "–ü–æ—Å–ª–µ –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∏–∫–Ω–∏—Ç–µ –ø–æ —Ç–µ—Ä–º–∏–Ω–∞–ª—É –≤ —Ü–µ–Ω—Ç—Ä–µ –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π!");
    }
    
    private void showConstructionStatus(Player player, EnhancedLaboratory laboratory) {
        int progress = laboratory.getConstructionProgress();
        
        player.sendMessage(ChatColor.AQUA + "üèóÔ∏è –°—Ç–∞—Ç—É—Å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏:");
        
        // –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        StringBuilder progressBar = new StringBuilder();
        progressBar.append(ChatColor.GREEN);
        int filledBars = progress / 5; // 20 —Å–∏–º–≤–æ–ª–æ–≤ –º–∞–∫—Å–∏–º—É–º
        for (int i = 0; i < 20; i++) {
            if (i < filledBars) {
                progressBar.append("‚ñà");
            } else if (i == filledBars && progress % 5 > 2) {
                progressBar.append("‚ñå");
            } else {
                progressBar.append(ChatColor.GRAY).append("‚ñë");
            }
        }
        
        player.sendMessage(ChatColor.WHITE + "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + progressBar.toString() + 
                         ChatColor.WHITE + " " + progress + "%");
        
        var required = laboratory.getRequiredMaterials();
        if (!required.isEmpty()) {
            player.sendMessage(ChatColor.YELLOW + "üì¶ –ï—â—ë –Ω—É–∂–Ω–æ:");
            for (var entry : required.entrySet()) {
                if (entry.getValue() > 0) {
                    String materialName = getMaterialDisplayName(entry.getKey());
                    player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + materialName + ": " + 
                                     ChatColor.YELLOW + entry.getValue());
                }
            }
        }
    }
    
    private String getMaterialDisplayName(Material material) {
        switch (material) {
            case QUARTZ_BLOCK: return ChatColor.WHITE + "–ö–≤–∞—Ä—Ü–µ–≤—ã–µ –±–ª–æ–∫–∏";
            case IRON_BLOCK: return ChatColor.GRAY + "–ñ–µ–ª–µ–∑–Ω—ã–µ –±–ª–æ–∫–∏";
            case GLASS: return ChatColor.AQUA + "–°—Ç–µ–∫–ª–æ";
            case REDSTONE_BLOCK: return ChatColor.RED + "–†–µ–¥—Å—Ç–æ—É–Ω –±–ª–æ–∫–∏";
            case DIAMOND_BLOCK: return ChatColor.AQUA + "–ê–ª–º–∞–∑–Ω—ã–µ –±–ª–æ–∫–∏";
            case EMERALD_BLOCK: return ChatColor.GREEN + "–ò–∑—É–º—Ä—É–¥–Ω—ã–µ –±–ª–æ–∫–∏";
            case BEACON: return ChatColor.LIGHT_PURPLE + "–ú–∞—è–∫–∏";
            case NETHER_STAR: return ChatColor.DARK_PURPLE + "–ó–≤—ë–∑–¥—ã –ù–∏–∂–Ω–µ–≥–æ –º–∏—Ä–∞";
            case GLOWSTONE: return ChatColor.YELLOW + "–°–≤–µ—Ç–æ–∫–∞–º–µ–Ω—å";
            case OBSIDIAN: return ChatColor.DARK_PURPLE + "–û–±—Å–∏–¥–∏–∞–Ω";
            default: return material.name();
        }
    }
}
