package com.uraniumcraft.listeners;

import com.uraniumcraft.UraniumPlugin;
import com.uraniumcraft.gui.UniversalGUI;
import com.uraniumcraft.items.UniversalItems;
import com.uraniumcraft.laboratory.Laboratory;
import com.uraniumcraft.centrifuge.Centrifuge;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.Particle;
import org.bukkit.block.Block;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockBreakEvent;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerItemConsumeEvent;
import org.bukkit.inventory.ItemStack;

import java.util.Random;

public class UniversalListener implements Listener {
    private final UraniumPlugin plugin;
    private final Random random = new Random();
    
    public UniversalListener(UraniumPlugin plugin) {
        this.plugin = plugin;
    }
    
    // ==================== BLOCK EVENTS ====================
    
    @EventHandler
    public void onBlockPlace(BlockPlaceEvent event) {
        Player player = event.getPlayer();
        ItemStack item = event.getItemInHand();
        
        if (item != null && item.hasItemMeta() && item.getItemMeta().hasDisplayName()) {
            String displayName = item.getItemMeta().getDisplayName();
            
            // –†–∞–∑–º–µ—â–µ–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏
            if (displayName.equals(ChatColor.LIGHT_PURPLE + "–ë–ª–æ–∫ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏")) {
                if (!player.hasPermission("uraniumcraft.admin")) {
                    event.setCancelled(true);
                    player.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π!");
                    return;
                }
                
                boolean created = plugin.getLaboratoryManager().createLaboratory(event.getBlock().getLocation(), player);
                if (created) {
                    player.sendMessage(ChatColor.GREEN + "‚úì –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞!");
                    player.sendMessage(ChatColor.AQUA + "–ù–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞.");
                    player.playSound(player.getLocation(), Sound.BLOCK_BEACON_ACTIVATE, 1.0f, 1.0f);
                    
                    event.getBlock().getWorld().spawnParticle(Particle.ENCHANTMENT_TABLE, 
                        event.getBlock().getLocation().add(0.5, 1, 0.5), 20, 0.5, 0.5, 0.5, 0.1);
                    
                    showRequiredMaterials(player);
                } else {
                    event.setCancelled(true);
                    player.sendMessage(ChatColor.RED + "–ó–¥–µ—Å—å —É–∂–µ –µ—Å—Ç—å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è!");
                }
            }
            
            // –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∏
            else if (displayName.equals(ChatColor.GOLD + "–¶–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞")) {
                boolean created = plugin.getCentrifugeManager().createCentrifuge(event.getBlock().getLocation(), player);
                if (created) {
                    player.sendMessage(ChatColor.GREEN + "‚úì –¶–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!");
                    player.playSound(player.getLocation(), Sound.BLOCK_ANVIL_PLACE, 1.0f, 1.0f);
                } else {
                    event.setCancelled(true);
                    player.sendMessage(ChatColor.RED + "–ó–¥–µ—Å—å —É–∂–µ –µ—Å—Ç—å —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞!");
                }
            }
        }
    }
    
    @EventHandler
    public void onBlockBreak(BlockBreakEvent event) {
        Player player = event.getPlayer();
        Block block = event.getBlock();
        
        // –î–æ–±—ã—á–∞ —É—Ä–∞–Ω–∞
        if (block.getType() == Material.COAL_ORE || block.getType() == Material.DEEPSLATE_COAL_ORE) {
            if (random.nextInt(100) < 15) { // 15% —à–∞–Ω—Å
                ItemStack uranium = UniversalItems.createUraniumOre();
                block.getWorld().dropItemNaturally(block.getLocation(), uranium);
                
                player.sendMessage(ChatColor.GREEN + "–í—ã –Ω–∞—à–ª–∏ —É—Ä–∞–Ω!");
                player.playSound(player.getLocation(), Sound.ENTITY_EXPERIENCE_ORB_PICKUP, 1.0f, 1.5f);
                
                // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                plugin.getPlayerStats().addUraniumMined(player.getUniqueId(), 1);
                
                // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
                plugin.getAchievementManager().checkAchievement(player, "first_uranium");
                
                // –†–∞–¥–∏–∞—Ü–∏—è
                plugin.getRadiationManager().addRadiation(player, 5);
            }
        }
        
        // –î–æ–±—ã—á–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        if (block.getType() == Material.IRON_ORE || block.getType() == Material.DEEPSLATE_IRON_ORE) {
            if (random.nextInt(100) < 10) {
                ItemStack component = UniversalItems.createRadioactiveComponent();
                block.getWorld().dropItemNaturally(block.getLocation(), component);
                player.sendMessage(ChatColor.YELLOW + "–í—ã –Ω–∞—à–ª–∏ —Ä–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç!");
            }
        }
    }
    
    // ==================== PLAYER INTERACTIONS ====================
    
    @EventHandler
    public void onPlayerInteract(PlayerInteractEvent event) {
        if (event.getClickedBlock() == null) return;
        
        Block block = event.getClickedBlock();
        Player player = event.getPlayer();
        
        // –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–µ–π
        Laboratory laboratory = plugin.getLaboratoryManager().getLaboratory(block.getLocation());
        if (laboratory != null) {
            handleLaboratoryInteraction(player, laboratory, block);
            event.setCancelled(true);
            return;
        }
        
        // –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–æ–π
        Centrifuge centrifuge = plugin.getCentrifugeManager().getCentrifuge(block.getLocation());
        if (centrifuge != null) {
            handleCentrifugeInteraction(player, centrifuge);
            event.setCancelled(true);
            return;
        }
        
        // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ —Ä–∞–¥–∏–∞—Ü–∏–∏
        ItemStack item = player.getInventory().getItemInMainHand();
        if (item != null && item.hasItemMeta() && item.getItemMeta().hasDisplayName()) {
            String displayName = item.getItemMeta().getDisplayName();
            
            if (displayName.equals(ChatColor.YELLOW + "–î–µ—Ç–µ–∫—Ç–æ—Ä —Ä–∞–¥–∏–∞—Ü–∏–∏")) {
                int radiation = plugin.getRadiationManager().getRadiation(player);
                player.sendMessage(ChatColor.YELLOW + "üî¨ –£—Ä–æ–≤–µ–Ω—å —Ä–∞–¥–∏–∞—Ü–∏–∏: " + ChatColor.RED + radiation + " —Ä–∞–¥");
                player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_PLING, 1.0f, 1.5f);
                event.setCancelled(true);
            }
        }
    }
    
    @EventHandler
    public void onPlayerItemConsume(PlayerItemConsumeEvent event) {
        Player player = event.getPlayer();
        ItemStack item = event.getItem();
        
        if (item.hasItemMeta() && item.getItemMeta().hasDisplayName()) {
            String displayName = item.getItemMeta().getDisplayName();
            
            // –ê–Ω—Ç–∏—Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–∞—è —Ç–∞–±–ª–µ—Ç–∫–∞
            if (displayName.equals(ChatColor.GREEN + "–ê–Ω—Ç–∏—Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–∞—è —Ç–∞–±–ª–µ—Ç–∫–∞")) {
                plugin.getRadiationManager().removeRadiation(player, 50);
                player.sendMessage(ChatColor.GREEN + "üíä –†–∞–¥–∏–∞—Ü–∏—è —Å–Ω–∏–∂–µ–Ω–∞!");
                player.playSound(player.getLocation(), Sound.ENTITY_PLAYER_BURP, 1.0f, 1.0f);
                
                plugin.getPlayerStats().addPillsTaken(player.getUniqueId(), 1);
            }
            
            // –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –Ω–∞–ø–∏—Ç–æ–∫
            else if (displayName.equals(ChatColor.BLUE + "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –Ω–∞–ø–∏—Ç–æ–∫")) {
                player.setFoodLevel(20);
                player.setSaturation(20);
                player.sendMessage(ChatColor.BLUE + "‚ö° –≠–Ω–µ—Ä–≥–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!");
                player.playSound(player.getLocation(), Sound.ENTITY_PLAYER_BURP, 1.0f, 1.2f);
            }
        }
    }
    
    // ==================== GUI EVENTS ====================
    
    @EventHandler
    public void onInventoryClick(InventoryClickEvent event) {
        if (!(event.getWhoClicked() instanceof Player)) return;
        
        Player player = (Player) event.getWhoClicked();
        String title = event.getView().getTitle();
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö GUI
        if (title.startsWith(ChatColor.DARK_PURPLE.toString()) || 
            title.startsWith(ChatColor.GOLD.toString()) ||
            title.startsWith(ChatColor.BLUE.toString()) ||
            title.startsWith(ChatColor.GREEN.toString())) {
            
            UniversalGUI.handleClick(player, event, plugin);
        }
    }
    
    // ==================== HELPER METHODS ====================
    
    private void handleLaboratoryInteraction(Player player, Laboratory laboratory, Block block) {
        if (!laboratory.getOwner().equals(player.getUniqueId()) && !player.hasPermission("uraniumcraft.admin")) {
            player.sendMessage(ChatColor.RED + "–≠—Ç–æ –Ω–µ –≤–∞—à–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è!");
            player.playSound(player.getLocation(), Sound.BLOCK_NOTE_BLOCK_BASS, 1.0f, 0.5f);
            return;
        }
        
        if (laboratory.getState() == Laboratory.LaboratoryState.COMPLETED) {
            UniversalGUI.openLaboratoryMenu(player, laboratory);
            player.playSound(player.getLocation(), Sound.BLOCK_BEACON_AMBIENT, 1.0f, 1.0f);
        } else {
            showConstructionStatus(player, laboratory);
            
            // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
            ItemStack handItem = player.getInventory().getItemInMainHand();
            if (handItem != null && handItem.getType() != Material.AIR) {
                Material material = handItem.getType();
                int amount = handItem.getAmount();
                
                if (laboratory.addMaterial(material, amount)) {
                    player.getInventory().setItemInMainHand(null);
                    player.sendMessage(ChatColor.GREEN + "‚úì –ú–∞—Ç–µ—Ä–∏–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω!");
                    player.sendMessage(ChatColor.YELLOW + "–ü—Ä–æ–≥—Ä–µ—Å—Å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞: " + 
                                     laboratory.getConstructionProgress() + "%");
                    
                    player.playSound(player.getLocation(), Sound.BLOCK_ANVIL_USE, 1.0f, 1.5f);
                    block.getWorld().spawnParticle(Particle.CRIT, 
                        block.getLocation().add(0.5, 1, 0.5), 10, 0.3, 0.3, 0.3, 0.1);
                    
                    if (laboratory.getState() == Laboratory.LaboratoryState.COMPLETED) {
                        player.sendMessage(ChatColor.GOLD + "üéâ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞!");
                        player.sendMessage(ChatColor.AQUA + "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è!");
                        player.playSound(player.getLocation(), Sound.UI_TOAST_CHALLENGE_COMPLETE, 1.0f, 1.0f);
                        
                        block.getWorld().spawnParticle(Particle.FIREWORKS_SPARK, 
                            block.getLocation().add(0.5, 2, 0.5), 50, 1, 1, 1, 0.2);
                    }
                } else {
                    player.sendMessage(ChatColor.GRAY + "–≠—Ç–æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª –Ω–µ –Ω—É–∂–µ–Ω –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞.");
                }
            }
        }
    }
    
    private void handleCentrifugeInteraction(Player player, Centrifuge centrifuge) {
        if (!centrifuge.getOwner().equals(player.getUniqueId()) && !player.hasPermission("uraniumcraft.admin")) {
            player.sendMessage(ChatColor.RED + "–≠—Ç–æ –Ω–µ –≤–∞—à–∞ —Ü–µ–Ω—Ç—Ä–∏—Ñ—É–≥–∞!");
            return;
        }
        
        UniversalGUI.openCentrifugeMenu(player, centrifuge);
        player.playSound(player.getLocation(), Sound.BLOCK_BEACON_AMBIENT, 1.0f, 1.2f);
    }
    
    private void showRequiredMaterials(Player player) {
        player.sendMessage(ChatColor.GOLD + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        player.sendMessage(ChatColor.YELLOW + "üìã –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞:");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.GRAY + "–ñ–µ–ª–µ–∑–Ω—ã–µ –±–ª–æ–∫–∏: " + ChatColor.YELLOW + "64");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.RED + "–†–µ–¥—Å—Ç–æ—É–Ω –±–ª–æ–∫–∏: " + ChatColor.YELLOW + "32");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.AQUA + "–ê–ª–º–∞–∑–Ω—ã–µ –±–ª–æ–∫–∏: " + ChatColor.YELLOW + "16");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.GREEN + "–ò–∑—É–º—Ä—É–¥–Ω—ã–µ –±–ª–æ–∫–∏: " + ChatColor.YELLOW + "8");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.LIGHT_PURPLE + "–ú–∞—è–∫–∏: " + ChatColor.YELLOW + "4");
        player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + ChatColor.DARK_PURPLE + "–ó–≤—ë–∑–¥—ã –ù–∏–∂–Ω–µ–≥–æ –º–∏—Ä–∞: " + ChatColor.YELLOW + "2");
        player.sendMessage(ChatColor.GOLD + "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê");
        player.sendMessage(ChatColor.GRAY + "–î–µ—Ä–∂–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –≤ —Ä—É–∫–µ –∏ –∫–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –±–ª–æ–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏");
    }
    
    private void showConstructionStatus(Player player, Laboratory laboratory) {
        int progress = laboratory.getConstructionProgress();
        
        player.sendMessage(ChatColor.AQUA + "üèóÔ∏è –°—Ç–∞—Ç—É—Å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏:");
        
        // –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        StringBuilder progressBar = new StringBuilder();
        progressBar.append(ChatColor.GREEN);
        int filledBars = progress / 5;
        for (int i = 0; i < 20; i++) {
            if (i < filledBars) {
                progressBar.append("‚ñà");
            } else if (i == filledBars && progress % 5 > 2) {
                progressBar.append("‚ñå");
            } else {
                progressBar.append(ChatColor.GRAY).append("‚ñë");
            }
        }
        
        player.sendMessage(ChatColor.WHITE + "–ü—Ä–æ–≥—Ä–µ—Å—Å: " + progressBar.toString() + 
                         ChatColor.WHITE + " " + progress + "%");
        
        var required = laboratory.getRequiredMaterials();
        if (!required.isEmpty()) {
            player.sendMessage(ChatColor.YELLOW + "üì¶ –ï—â—ë –Ω—É–∂–Ω–æ:");
            for (var entry : required.entrySet()) {
                if (entry.getValue() > 0) {
                    String materialName = getMaterialDisplayName(entry.getKey());
                    player.sendMessage(ChatColor.WHITE + "‚Ä¢ " + materialName + ": " + 
                                     ChatColor.YELLOW + entry.getValue());
                }
            }
        }
    }
    
    private String getMaterialDisplayName(Material material) {
        switch (material) {
            case IRON_BLOCK: return ChatColor.GRAY + "–ñ–µ–ª–µ–∑–Ω—ã–µ –±–ª–æ–∫–∏";
            case REDSTONE_BLOCK: return ChatColor.RED + "–†–µ–¥—Å—Ç–æ—É–Ω –±–ª–æ–∫–∏";
            case DIAMOND_BLOCK: return ChatColor.AQUA + "–ê–ª–º–∞–∑–Ω—ã–µ –±–ª–æ–∫–∏";
            case EMERALD_BLOCK: return ChatColor.GREEN + "–ò–∑—É–º—Ä—É–¥–Ω—ã–µ –±–ª–æ–∫–∏";
            case BEACON: return ChatColor.LIGHT_PURPLE + "–ú–∞—è–∫–∏";
            case NETHER_STAR: return ChatColor.DARK_PURPLE + "–ó–≤—ë–∑–¥—ã –ù–∏–∂–Ω–µ–≥–æ –º–∏—Ä–∞";
            default: return material.name();
        }
    }
}
